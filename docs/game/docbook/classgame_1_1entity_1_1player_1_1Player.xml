<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classgame_1_1entity_1_1player_1_1Player" xml:lang="en-US">
<title>game.entity.player.Player Class Reference</title>
<indexterm><primary>game.entity.player.Player</primary></indexterm>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>None <link linkend="_classgame_1_1entity_1_1player_1_1Player_1ae8a394059a531cc7b6354aebcff99da4">__init__</link> (self, int x=0, int y=0, int speed=50)</para>
</listitem>
            <listitem><para>None <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a85b9c464f574f467e4d471c83fcdd3c3">init</link> (self, game)</para>
</listitem>
            <listitem><para>None <link linkend="_classgame_1_1entity_1_1player_1_1Player_1adc58feb2b151511a2a328d67f9b7265d">events</link> (self, game, map_obj, pygame.event.Event|pygame.event.EventType e)</para>
</listitem>
            <listitem><para>None <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a3b54df3988def46606805c89b2ee8d12">draw</link> (self, game)</para>
</listitem>
            <listitem><para>None <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a31151805ef60f39e81615532baf2068d">draw_selection_grid</link> (self, game)</para>
</listitem>
            <listitem><para>None <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a633f1adf6b5b511c6ba3c8e6aa5d08a4">draw_gun_pointer</link> (self, game)</para>
</listitem>
            <listitem><para>None <link linkend="_classgame_1_1entity_1_1player_1_1Player_1aac446a4b6f9fdfec3dfe98da144db72c">update</link> (self, game, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</para>
</listitem>
            <listitem><para>None <link linkend="_classgame_1_1entity_1_1player_1_1Player_1ab83fa784bc48f3d251d02fd96f004c59">break_tile</link> (self, game)</para>
</listitem>
            <listitem><para>None <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a75efbe024da9d00008138a498cfb6262">reset</link> (self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj, <link linkend="_classgame_1_1world_1_1camera_1_1Camera">Camera</link> camera_obj)</para>
</listitem>
            <listitem><para>bool <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a5ffdafd5b5b848e3c93c3c3a02fdd8b4">is_moving_left</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classgame_1_1entity_1_1player_1_1Player_1aa09656c0ca67abf3f879dade669887af">is_moving_up</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a3d2eba9e6dc9533f2cdba19d9955174b">is_moving_right</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classgame_1_1entity_1_1player_1_1Player_1ae5bfa84ea0391e25be5f38e066e1b643">is_moving_down</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classgame_1_1entity_1_1player_1_1Player_1acb5069f24d6a8e7ea7b64757e81a8e7f">is_near_left_edge</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a7d9645a49400425f95273daec0a26245">is_near_top_edge</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a766dbc331ec2340ca5bfaa233039fd34">is_near_right_edge</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classgame_1_1entity_1_1player_1_1Player_1aa0fa150004d65def532b1b502190ffaf">is_near_bottom_edge</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a3023da655ca91d60b474a87383ee5df5">is_in_water</link> (self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</para>
</listitem>
            <listitem><para>bool <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a192bbc5753b484a578ebbd8ef84d58cf">is_in_lava</link> (self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</para>
</listitem>
            <listitem><para>bool <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a3e2f94bf3503cd8a1a6c49386df7845a">is_in_lethal_tile</link> (self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</para>
</listitem>
            <listitem><para>bool <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a863a8c50dba2f36bc20ef50874c35ffa">is_in_wall</link> (self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</para>
</listitem>
            <listitem><para>bool <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a90dc366ca03d5503e1677cac71158ce7">get_held_item</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a404be9fc768fd2da192f242336ee1191">is_dead</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a41404e36ad2f6feecb68c19c9b6f374c">can_break_breakable</link> (self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</para>
</listitem>
            <listitem><para>bool <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a39979375a0ea01197113f5481413ddbe">has_selected_breakable</link> (self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</para>
</listitem>
            <listitem><para>bool <link linkend="_classgame_1_1entity_1_1player_1_1Player_1afda0c94794ba73e26cc6a560ed4ba54a">is_selected_breakable_obstructed</link> (self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</para>
</listitem>
            <listitem><para>Self <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a28eee21c2960d4507cbc7ed780e841b4">set_x</link> (self, int x)</para>
</listitem>
            <listitem><para>int <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a1d702dcae07ef2a6050f43f9750f2342">get_x</link> (self)</para>
</listitem>
            <listitem><para>Self <link linkend="_classgame_1_1entity_1_1player_1_1Player_1ae64ca646603c8b9a03b716ce202a36fe">set_y</link> (self, int y)</para>
</listitem>
            <listitem><para>int <link linkend="_classgame_1_1entity_1_1player_1_1Player_1ab5eb4770f55c69e6a894ab9f6c3953c2">get_y</link> (self)</para>
</listitem>
            <listitem><para>int <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a6ed56d95d0d2ca9ad37133dc19f68948">get_absolute_x</link> (self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</para>
</listitem>
            <listitem><para>int <link linkend="_classgame_1_1entity_1_1player_1_1Player_1ab41bb73c1768538bd41a72014e0ed484">get_absolute_y</link> (self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</para>
</listitem>
            <listitem><para>float <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a9ce825a37b7be7556a88d1f9405c4f60">get_coefficient_from_center_x</link> (self, int parent_width)</para>
</listitem>
            <listitem><para>float <link linkend="_classgame_1_1entity_1_1player_1_1Player_1aa4067e093443bd5303a96e38da1fd0f3">get_coefficient_from_center_y</link> (self, int parent_height)</para>
</listitem>
            <listitem><para>int <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a063430d89c29fe2dfb8011a575b8e817">get_selected_tile_x</link> (self)</para>
</listitem>
            <listitem><para>int <link linkend="_classgame_1_1entity_1_1player_1_1Player_1ae097f71f869a6a0fa85067f64f4429cd">get_selected_tile_y</link> (self)</para>
</listitem>
            <listitem><para>Self <link linkend="_classgame_1_1entity_1_1player_1_1Player_1ab2affeeb76b2f4d913dc3c20eae05bcb">set_health</link> (self, int <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a39fe4311d0384b9e122c76149b3717e3">health</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a40b7fccdbb1f85426d43d5227f81e5f0">get_health</link> (self)</para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1a658c904f6950d8a6b4330a45420e5cd9">set_player_name</link> (self, str <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a1b83188f7f242c8efa9086af1d3fcb3b">player_name</link>)</para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1a04dcde82a590285957bdea1df802b9af">get_player_name</link> (self)</para>
</listitem>
            <listitem><para>list[bool] <link linkend="_classgame_1_1entity_1_1player_1_1Player_1ac33769502c033e6a429c414d2b85183b">get_walls</link> (self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</para>
</listitem>
            <listitem><para>None <link linkend="_classgame_1_1entity_1_1player_1_1Player_1ac73ac652b8ea5acca65eca2dedcf53a6">set_ideal_spawn_point</link> (self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj, <link linkend="_classgame_1_1world_1_1camera_1_1Camera">Camera</link> camera_obj, int nb_attempts=5)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1a8a2dfc6aaf63c2989188a6c9e9946505">edges</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1ab6123b25ff3483f2c9dcb91d5ead1213">main_hud</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1a1b83188f7f242c8efa9086af1d3fcb3b">player_name</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1aea547ac92a3f560eb6d124dca7242523">breaking</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1a8931e85d07403eb98c379b8adfd28056">selected_tile_x</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1a75793fc8cdf2ae220f847a630180e88d">selected_tile_y</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1aead38cf4564076e4aa8239f1cccb88eb">screen_x</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1aec999989dda1cc94eeb569592dfb8f2a">screen_y</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1a1ad79e0736a99f68c7148893a8807398">width</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1a2164a28b704f306525e2bd418ff9edcc">height</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1a2ea4452a85c32dbcacd64f8dc303445e">selected_tile_sx</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1ac0a712c853a6aafbe0bed8f3ac419d0e">selected_tile_sy</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1ab7403c5b46cf5543a9ce9deeb32b20b4">move</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1a55d2fdcd55a9ca3a892fcaf492938d8f">velocity_x</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1a60f15050023a3f3cb7890fb2459576ce">velocity_y</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1ae837064c4eef53c9545b5a97f6b4c9a7">hurt</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1a39fe4311d0384b9e122c76149b3717e3">health</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1aaf14809a75dfd272eac4ddcf173423c0">breaking_tile</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1a68d1e857e5771b3761bea1f59478a00d">prev_selected_tile</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1a04deaa657e48911162bbd714490fa2e3">prev_broken_tile</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_classgame_1_1entity_1_1player_1_1Player_1a113888f105f734787b1a9adc5edb1a90">TIMERS_COUNT</link> = 2</para>
</listitem>
            <listitem><para>int <link linkend="_classgame_1_1entity_1_1player_1_1Player_1ab4f693b2fdc75e7d3c288d4d697acaa6">MINING_TIMER</link> = 0</para>
</listitem>
            <listitem><para>int <link linkend="_classgame_1_1entity_1_1player_1_1Player_1af2ef1db9b449cd7325c302b2fb3e67e6">DAMAGE_TIMER</link> = 1</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1a7591fbc2a90b9e26570c97bac44d3ae3">_x</link></para>
</listitem>
            <listitem><para><link linkend="_classgame_1_1entity_1_1player_1_1Player_1ad5d5296c18a702d30a11035fcbb94ab7">_y</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para><literallayout><computeroutput>Class for creating a player.
</computeroutput></literallayout> </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1ae8a394059a531cc7b6354aebcff99da4"/><section>
    <title>__init__()</title>
<indexterm><primary>__init__</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>__init__</secondary></indexterm>
<para><computeroutput> None game.entity.player.Player.__init__ ( self, int  x = <computeroutput>0</computeroutput>
, int  y = <computeroutput>0</computeroutput>
, int  speed = <computeroutput>50</computeroutput>
)</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1ab83fa784bc48f3d251d02fd96f004c59"/><section>
    <title>break_tile()</title>
<indexterm><primary>break_tile</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>break_tile</secondary></indexterm>
<para><computeroutput> None game.entity.player.Player.break_tile ( self,  game)</computeroutput></para>
<para><literallayout><computeroutput>Break a map tile and update map surfaces.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a41404e36ad2f6feecb68c19c9b6f374c"/><section>
    <title>can_break_breakable()</title>
<indexterm><primary>can_break_breakable</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>can_break_breakable</secondary></indexterm>
<para><computeroutput> bool game.entity.player.Player.can_break_breakable ( self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Returns True if the player is able to access and break a breakable tile.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a3b54df3988def46606805c89b2ee8d12"/><section>
    <title>draw()</title>
<indexterm><primary>draw</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>draw</secondary></indexterm>
<para><computeroutput> None game.entity.player.Player.draw ( self,  game)</computeroutput></para>
<para><literallayout><computeroutput>Draw the player to the screen.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a633f1adf6b5b511c6ba3c8e6aa5d08a4"/><section>
    <title>draw_gun_pointer()</title>
<indexterm><primary>draw_gun_pointer</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>draw_gun_pointer</secondary></indexterm>
<para><computeroutput> None game.entity.player.Player.draw_gun_pointer ( self,  game)</computeroutput></para>
<para><literallayout><computeroutput>Draw the gun pointer to the screen.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a31151805ef60f39e81615532baf2068d"/><section>
    <title>draw_selection_grid()</title>
<indexterm><primary>draw_selection_grid</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>draw_selection_grid</secondary></indexterm>
<para><computeroutput> None game.entity.player.Player.draw_selection_grid ( self,  game)</computeroutput></para>
<para><literallayout><computeroutput>Draw the player tile selection grid to the screen.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1adc58feb2b151511a2a328d67f9b7265d"/><section>
    <title>events()</title>
<indexterm><primary>events</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>events</secondary></indexterm>
<para><computeroutput> None game.entity.player.Player.events ( self,  game,  map_obj, pygame.event.Event | pygame.event.EventType e)</computeroutput></para>
<para><literallayout><computeroutput>Handle the player events.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a6ed56d95d0d2ca9ad37133dc19f68948"/><section>
    <title>get_absolute_x()</title>
<indexterm><primary>get_absolute_x</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>get_absolute_x</secondary></indexterm>
<para><computeroutput> int game.entity.player.Player.get_absolute_x ( self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Return the player&apos;s x position as if the map&apos;s top-left corner were to be positioned at the origin (0, 0).
This signifies that the returned value will always be positive.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1ab41bb73c1768538bd41a72014e0ed484"/><section>
    <title>get_absolute_y()</title>
<indexterm><primary>get_absolute_y</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>get_absolute_y</secondary></indexterm>
<para><computeroutput> int game.entity.player.Player.get_absolute_y ( self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Return the player&apos;s y position as if the map&apos;s top-left corner were to be positioned at the origin (0, 0).
This signifies that the returned value will always be positive.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a9ce825a37b7be7556a88d1f9405c4f60"/><section>
    <title>get_coefficient_from_center_x()</title>
<indexterm><primary>get_coefficient_from_center_x</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>get_coefficient_from_center_x</secondary></indexterm>
<para><computeroutput> float game.entity.player.Player.get_coefficient_from_center_x ( self, int parent_width)</computeroutput></para>
<para><literallayout><computeroutput>Return the coefficient indicating how far the player is away from the horizontal center of the screen.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1aa4067e093443bd5303a96e38da1fd0f3"/><section>
    <title>get_coefficient_from_center_y()</title>
<indexterm><primary>get_coefficient_from_center_y</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>get_coefficient_from_center_y</secondary></indexterm>
<para><computeroutput> float game.entity.player.Player.get_coefficient_from_center_y ( self, int parent_height)</computeroutput></para>
<para><literallayout><computeroutput>Return the coefficient indicating how far the player is away from the vertical center of the screen.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a40b7fccdbb1f85426d43d5227f81e5f0"/><section>
    <title>get_health()</title>
<indexterm><primary>get_health</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>get_health</secondary></indexterm>
<para><computeroutput> int game.entity.player.Player.get_health ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the player&apos;s health.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a90dc366ca03d5503e1677cac71158ce7"/><section>
    <title>get_held_item()</title>
<indexterm><primary>get_held_item</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>get_held_item</secondary></indexterm>
<para><computeroutput> bool game.entity.player.Player.get_held_item ( self)</computeroutput></para>
<para><literallayout><computeroutput>Returns item held by player.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a04dcde82a590285957bdea1df802b9af"/><section>
    <title>get_player_name()</title>
<indexterm><primary>get_player_name</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>get_player_name</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.get_player_name ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the player&apos;s in-game name.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a063430d89c29fe2dfb8011a575b8e817"/><section>
    <title>get_selected_tile_x()</title>
<indexterm><primary>get_selected_tile_x</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>get_selected_tile_x</secondary></indexterm>
<para><computeroutput> int game.entity.player.Player.get_selected_tile_x ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the selected tile&apos;s x position.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1ae097f71f869a6a0fa85067f64f4429cd"/><section>
    <title>get_selected_tile_y()</title>
<indexterm><primary>get_selected_tile_y</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>get_selected_tile_y</secondary></indexterm>
<para><computeroutput> int game.entity.player.Player.get_selected_tile_y ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the selected tile&apos;s y position.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1ac33769502c033e6a429c414d2b85183b"/><section>
    <title>get_walls()</title>
<indexterm><primary>get_walls</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>get_walls</secondary></indexterm>
<para><computeroutput> list[bool] game.entity.player.Player.get_walls ( self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Return the tiles of type BREAKABLE surrounding the player.
This is used for determining what tiles the player could potentially collide with.
The order of the tiles are MOVE_LEFT, MOVE_RIGHT, MOVE_UP, MOVE_DOWN, UPPER MOVE_LEFT, UPPER MOVE_RIGHT, LOWER MOVE_LEFT, LOWER MOVE_RIGHT.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a1d702dcae07ef2a6050f43f9750f2342"/><section>
    <title>get_x()</title>
<indexterm><primary>get_x</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>get_x</secondary></indexterm>
<para><computeroutput> int game.entity.player.Player.get_x ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the player&apos;s x position.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1ab5eb4770f55c69e6a894ab9f6c3953c2"/><section>
    <title>get_y()</title>
<indexterm><primary>get_y</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>get_y</secondary></indexterm>
<para><computeroutput> int game.entity.player.Player.get_y ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the player&apos;s y position.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a39979375a0ea01197113f5481413ddbe"/><section>
    <title>has_selected_breakable()</title>
<indexterm><primary>has_selected_breakable</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>has_selected_breakable</secondary></indexterm>
<para><computeroutput> bool game.entity.player.Player.has_selected_breakable ( self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Returns True if the player has selected a breakable tile.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a85b9c464f574f467e4d471c83fcdd3c3"/><section>
    <title>init()</title>
<indexterm><primary>init</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>init</secondary></indexterm>
<para><computeroutput> None game.entity.player.Player.init ( self,  game)</computeroutput></para>
<para><literallayout><computeroutput>Define the player attributes that depend on the given game object.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a404be9fc768fd2da192f242336ee1191"/><section>
    <title>is_dead()</title>
<indexterm><primary>is_dead</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>is_dead</secondary></indexterm>
<para><computeroutput> bool game.entity.player.Player.is_dead ( self)</computeroutput></para>
<para><literallayout><computeroutput>Returns True if the player is dead.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a192bbc5753b484a578ebbd8ef84d58cf"/><section>
    <title>is_in_lava()</title>
<indexterm><primary>is_in_lava</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>is_in_lava</secondary></indexterm>
<para><computeroutput> bool game.entity.player.Player.is_in_lava ( self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Returns True if the player is in lava.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a3e2f94bf3503cd8a1a6c49386df7845a"/><section>
    <title>is_in_lethal_tile()</title>
<indexterm><primary>is_in_lethal_tile</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>is_in_lethal_tile</secondary></indexterm>
<para><computeroutput> bool game.entity.player.Player.is_in_lethal_tile ( self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Returns True if the player is touching a lethal tile.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a863a8c50dba2f36bc20ef50874c35ffa"/><section>
    <title>is_in_wall()</title>
<indexterm><primary>is_in_wall</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>is_in_wall</secondary></indexterm>
<para><computeroutput> bool game.entity.player.Player.is_in_wall ( self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Returns True if the player is surrounded by tiles with collision.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a3023da655ca91d60b474a87383ee5df5"/><section>
    <title>is_in_water()</title>
<indexterm><primary>is_in_water</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>is_in_water</secondary></indexterm>
<para><computeroutput> bool game.entity.player.Player.is_in_water ( self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Returns True if the player is in water.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1ae5bfa84ea0391e25be5f38e066e1b643"/><section>
    <title>is_moving_down()</title>
<indexterm><primary>is_moving_down</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>is_moving_down</secondary></indexterm>
<para><computeroutput> bool game.entity.player.Player.is_moving_down ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return True if the player is moving down.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a5ffdafd5b5b848e3c93c3c3a02fdd8b4"/><section>
    <title>is_moving_left()</title>
<indexterm><primary>is_moving_left</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>is_moving_left</secondary></indexterm>
<para><computeroutput> bool game.entity.player.Player.is_moving_left ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return True if the player is moving left.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a3d2eba9e6dc9533f2cdba19d9955174b"/><section>
    <title>is_moving_right()</title>
<indexterm><primary>is_moving_right</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>is_moving_right</secondary></indexterm>
<para><computeroutput> bool game.entity.player.Player.is_moving_right ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return True if the player is moving right.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1aa09656c0ca67abf3f879dade669887af"/><section>
    <title>is_moving_up()</title>
<indexterm><primary>is_moving_up</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>is_moving_up</secondary></indexterm>
<para><computeroutput> bool game.entity.player.Player.is_moving_up ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return True if the player is moving up.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1aa0fa150004d65def532b1b502190ffaf"/><section>
    <title>is_near_bottom_edge()</title>
<indexterm><primary>is_near_bottom_edge</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>is_near_bottom_edge</secondary></indexterm>
<para><computeroutput> bool game.entity.player.Player.is_near_bottom_edge ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return True if the player is to the bottom-center of the screen.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1acb5069f24d6a8e7ea7b64757e81a8e7f"/><section>
    <title>is_near_left_edge()</title>
<indexterm><primary>is_near_left_edge</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>is_near_left_edge</secondary></indexterm>
<para><computeroutput> bool game.entity.player.Player.is_near_left_edge ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return True if the player is at the left-center of the screen.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a766dbc331ec2340ca5bfaa233039fd34"/><section>
    <title>is_near_right_edge()</title>
<indexterm><primary>is_near_right_edge</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>is_near_right_edge</secondary></indexterm>
<para><computeroutput> bool game.entity.player.Player.is_near_right_edge ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return True if the player is to the right-center of the screen.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a7d9645a49400425f95273daec0a26245"/><section>
    <title>is_near_top_edge()</title>
<indexterm><primary>is_near_top_edge</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>is_near_top_edge</secondary></indexterm>
<para><computeroutput> bool game.entity.player.Player.is_near_top_edge ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return True if the player is at the top-center of the screen.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1afda0c94794ba73e26cc6a560ed4ba54a"/><section>
    <title>is_selected_breakable_obstructed()</title>
<indexterm><primary>is_selected_breakable_obstructed</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>is_selected_breakable_obstructed</secondary></indexterm>
<para><computeroutput> bool game.entity.player.Player.is_selected_breakable_obstructed ( self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Returns True if the selected breakable tile is obstructed by other tiles with collision.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a75efbe024da9d00008138a498cfb6262"/><section>
    <title>reset()</title>
<indexterm><primary>reset</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>reset</secondary></indexterm>
<para><computeroutput> None game.entity.player.Player.reset ( self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj, <link linkend="_classgame_1_1world_1_1camera_1_1Camera">Camera</link> camera_obj)</computeroutput></para>
<para><literallayout><computeroutput>Reset the player&apos;s general attributes.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1ab2affeeb76b2f4d913dc3c20eae05bcb"/><section>
    <title>set_health()</title>
<indexterm><primary>set_health</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>set_health</secondary></indexterm>
<para><computeroutput> Self game.entity.player.Player.set_health ( self, int health)</computeroutput></para>
<para><literallayout><computeroutput>Set the player&apos;s health, then return the player itself.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1ac73ac652b8ea5acca65eca2dedcf53a6"/><section>
    <title>set_ideal_spawn_point()</title>
<indexterm><primary>set_ideal_spawn_point</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>set_ideal_spawn_point</secondary></indexterm>
<para><computeroutput> None game.entity.player.Player.set_ideal_spawn_point ( self, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj, <link linkend="_classgame_1_1world_1_1camera_1_1Camera">Camera</link> camera_obj, int  nb_attempts = <computeroutput>5</computeroutput>
)</computeroutput></para>
<para><literallayout><computeroutput>Find the ideal starting position for the player when creating a new map.
By default, five consecutive failed attempts will replace the tile at the last randomised tile position
to plains and place the player there.
Setting the number of attempts to anything less than 1 will raise an exception.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a658c904f6950d8a6b4330a45420e5cd9"/><section>
    <title>set_player_name()</title>
<indexterm><primary>set_player_name</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>set_player_name</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.set_player_name ( self, str player_name)</computeroutput></para>
<para><literallayout><computeroutput>Set the player&apos;s in-game name, then return the player itself.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a28eee21c2960d4507cbc7ed780e841b4"/><section>
    <title>set_x()</title>
<indexterm><primary>set_x</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>set_x</secondary></indexterm>
<para><computeroutput> Self game.entity.player.Player.set_x ( self, int x)</computeroutput></para>
<para><literallayout><computeroutput>Set the player&apos;s x position, then return the player itself.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1ae64ca646603c8b9a03b716ce202a36fe"/><section>
    <title>set_y()</title>
<indexterm><primary>set_y</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>set_y</secondary></indexterm>
<para><computeroutput> Self game.entity.player.Player.set_y ( self, int y)</computeroutput></para>
<para><literallayout><computeroutput>Set the player&apos;s y position, then return the player itself.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1aac446a4b6f9fdfec3dfe98da144db72c"/><section>
    <title>update()</title>
<indexterm><primary>update</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>update</secondary></indexterm>
<para><computeroutput> None game.entity.player.Player.update ( self,  game, <link linkend="_classgame_1_1world_1_1map__manager_1_1Map">Map</link> map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Update the player.
</computeroutput></literallayout> </para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a7591fbc2a90b9e26570c97bac44d3ae3"/><section>
    <title>_x</title>
<indexterm><primary>_x</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>_x</secondary></indexterm>
<para><computeroutput>game.entity.player.Player._x<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1ad5d5296c18a702d30a11035fcbb94ab7"/><section>
    <title>_y</title>
<indexterm><primary>_y</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>_y</secondary></indexterm>
<para><computeroutput>game.entity.player.Player._y<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1aea547ac92a3f560eb6d124dca7242523"/><section>
    <title>breaking</title>
<indexterm><primary>breaking</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>breaking</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.breaking</computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1aaf14809a75dfd272eac4ddcf173423c0"/><section>
    <title>breaking_tile</title>
<indexterm><primary>breaking_tile</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>breaking_tile</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.breaking_tile</computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1af2ef1db9b449cd7325c302b2fb3e67e6"/><section>
    <title>DAMAGE_TIMER</title>
<indexterm><primary>DAMAGE_TIMER</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>DAMAGE_TIMER</secondary></indexterm>
<para><computeroutput>int game.entity.player.Player.DAMAGE_TIMER = 1<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a8a2dfc6aaf63c2989188a6c9e9946505"/><section>
    <title>edges</title>
<indexterm><primary>edges</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>edges</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.edges</computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a39fe4311d0384b9e122c76149b3717e3"/><section>
    <title>health</title>
<indexterm><primary>health</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>health</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.health</computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a2164a28b704f306525e2bd418ff9edcc"/><section>
    <title>height</title>
<indexterm><primary>height</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>height</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.height</computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1ae837064c4eef53c9545b5a97f6b4c9a7"/><section>
    <title>hurt</title>
<indexterm><primary>hurt</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>hurt</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.hurt</computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1ab6123b25ff3483f2c9dcb91d5ead1213"/><section>
    <title>main_hud</title>
<indexterm><primary>main_hud</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>main_hud</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.main_hud</computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1ab4f693b2fdc75e7d3c288d4d697acaa6"/><section>
    <title>MINING_TIMER</title>
<indexterm><primary>MINING_TIMER</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>MINING_TIMER</secondary></indexterm>
<para><computeroutput>int game.entity.player.Player.MINING_TIMER = 0<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1ab7403c5b46cf5543a9ce9deeb32b20b4"/><section>
    <title>move</title>
<indexterm><primary>move</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>move</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.move</computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a1b83188f7f242c8efa9086af1d3fcb3b"/><section>
    <title>player_name</title>
<indexterm><primary>player_name</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>player_name</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.player_name</computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a04deaa657e48911162bbd714490fa2e3"/><section>
    <title>prev_broken_tile</title>
<indexterm><primary>prev_broken_tile</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>prev_broken_tile</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.prev_broken_tile</computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a68d1e857e5771b3761bea1f59478a00d"/><section>
    <title>prev_selected_tile</title>
<indexterm><primary>prev_selected_tile</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>prev_selected_tile</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.prev_selected_tile</computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1aead38cf4564076e4aa8239f1cccb88eb"/><section>
    <title>screen_x</title>
<indexterm><primary>screen_x</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>screen_x</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.screen_x</computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1aec999989dda1cc94eeb569592dfb8f2a"/><section>
    <title>screen_y</title>
<indexterm><primary>screen_y</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>screen_y</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.screen_y</computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a2ea4452a85c32dbcacd64f8dc303445e"/><section>
    <title>selected_tile_sx</title>
<indexterm><primary>selected_tile_sx</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>selected_tile_sx</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.selected_tile_sx</computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1ac0a712c853a6aafbe0bed8f3ac419d0e"/><section>
    <title>selected_tile_sy</title>
<indexterm><primary>selected_tile_sy</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>selected_tile_sy</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.selected_tile_sy</computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a8931e85d07403eb98c379b8adfd28056"/><section>
    <title>selected_tile_x</title>
<indexterm><primary>selected_tile_x</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>selected_tile_x</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.selected_tile_x</computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a75793fc8cdf2ae220f847a630180e88d"/><section>
    <title>selected_tile_y</title>
<indexterm><primary>selected_tile_y</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>selected_tile_y</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.selected_tile_y</computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a113888f105f734787b1a9adc5edb1a90"/><section>
    <title>TIMERS_COUNT</title>
<indexterm><primary>TIMERS_COUNT</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>TIMERS_COUNT</secondary></indexterm>
<para><computeroutput>int game.entity.player.Player.TIMERS_COUNT = 2<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a55d2fdcd55a9ca3a892fcaf492938d8f"/><section>
    <title>velocity_x</title>
<indexterm><primary>velocity_x</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>velocity_x</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.velocity_x</computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a60f15050023a3f3cb7890fb2459576ce"/><section>
    <title>velocity_y</title>
<indexterm><primary>velocity_y</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>velocity_y</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.velocity_y</computeroutput></para></section>
<anchor xml:id="_classgame_1_1entity_1_1player_1_1Player_1a1ad79e0736a99f68c7148893a8807398"/><section>
    <title>width</title>
<indexterm><primary>width</primary><secondary>game.entity.player.Player</secondary></indexterm>
<indexterm><primary>game.entity.player.Player</primary><secondary>width</secondary></indexterm>
<para><computeroutput>game.entity.player.Player.width</computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
<link linkend="_player_8py">player.py</link></section>
</section>
