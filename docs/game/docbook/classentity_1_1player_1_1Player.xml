<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classentity_1_1player_1_1Player" xml:lang="en-US">
<title>entity.player.Player Class Reference</title>
<indexterm><primary>entity.player.Player</primary></indexterm>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>None <link linkend="_classentity_1_1player_1_1Player_1ac139a84f7aaa64b903c90bad4b2054d7">__init__</link> (self, int x=0, int y=0, int speed=50)</para>
</listitem>
            <listitem><para>None <link linkend="_classentity_1_1player_1_1Player_1a0f4a06f686d279aacd4e4fd96145e964">init</link> (self, game)</para>
</listitem>
            <listitem><para>None <link linkend="_classentity_1_1player_1_1Player_1afd7ec41e0803d4914f8273e37e877998">events</link> (self, game, map_obj, pygame.event.Event|pygame.event.EventType e)</para>
</listitem>
            <listitem><para>None <link linkend="_classentity_1_1player_1_1Player_1a088e799a0514065ae12b4a73f8af31d7">draw</link> (self, game)</para>
</listitem>
            <listitem><para>None <link linkend="_classentity_1_1player_1_1Player_1a25aae6183470550f61ac756e31065b38">draw_selection_grid</link> (self, game)</para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1a844c4cb1da3e650125e1f0a5b519051e">draw_gun_pointer</link> (self, game)</para>
</listitem>
            <listitem><para>None <link linkend="_classentity_1_1player_1_1Player_1a48bea1ff1a5d946a280ed8124b1c1f54">update</link> (self, game, Map map_obj)</para>
</listitem>
            <listitem><para>None <link linkend="_classentity_1_1player_1_1Player_1a7ece2718b2026baeffbfd07f25aae393">update_ui</link> (self)</para>
</listitem>
            <listitem><para>None <link linkend="_classentity_1_1player_1_1Player_1a0dea8ed7462593a16c35b885e7610af5">break_tile</link> (self, game)</para>
</listitem>
            <listitem><para>None <link linkend="_classentity_1_1player_1_1Player_1a9049d1072511b52819c82110f333162c">reset</link> (self, Map map_obj, Camera camera_obj)</para>
</listitem>
            <listitem><para>bool <link linkend="_classentity_1_1player_1_1Player_1a394cf963598eef1f0f884aeffba2aa49">is_moving_left</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classentity_1_1player_1_1Player_1aa3ac9680dd98c07f8e24cabf3990e5f3">is_moving_up</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classentity_1_1player_1_1Player_1ad943f7e66143bfa78ea42fa6cd8e6711">is_moving_right</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classentity_1_1player_1_1Player_1a2acb0f55e61c149a8d56d6848e60a34f">is_moving_down</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classentity_1_1player_1_1Player_1a984baf0e2cabf4e92ff99f205d4722e5">is_near_left_edge</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classentity_1_1player_1_1Player_1afc0d3650583ad35f979974148d1324b3">is_near_top_edge</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classentity_1_1player_1_1Player_1a595200451bbc4a0a14d0eafb092b13df">is_near_right_edge</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classentity_1_1player_1_1Player_1a5dc1059f5d598433a83e59d6d634149b">is_near_bottom_edge</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classentity_1_1player_1_1Player_1acfb6dea96f615b76de23b4501748b3d8">is_in_water</link> (self, Map map_obj)</para>
</listitem>
            <listitem><para>bool <link linkend="_classentity_1_1player_1_1Player_1afa56e7928f74c7a41867f01728582528">is_in_lava</link> (self, Map map_obj)</para>
</listitem>
            <listitem><para>bool <link linkend="_classentity_1_1player_1_1Player_1ac2a32dfc71633031a14e53dd50a1c01a">is_in_lethal_tile</link> (self, Map map_obj)</para>
</listitem>
            <listitem><para>bool <link linkend="_classentity_1_1player_1_1Player_1ae81cad8591f0b46786088a12f8ec7519">is_in_wall</link> (self, Map map_obj)</para>
</listitem>
            <listitem><para>bool <link linkend="_classentity_1_1player_1_1Player_1a777988331f4291d4628fbb51a162ea20">get_held_item</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classentity_1_1player_1_1Player_1a745d4beb0c9c6a6859283ad99233b3d9">is_dead</link> (self)</para>
</listitem>
            <listitem><para>bool <link linkend="_classentity_1_1player_1_1Player_1a9c673e4056ff93b088c2a53e7ee9baeb">can_break_breakable</link> (self, Map map_obj)</para>
</listitem>
            <listitem><para>bool <link linkend="_classentity_1_1player_1_1Player_1a5f011e6d3f71afd6dde810615da1e5f4">has_selected_breakable</link> (self, Map map_obj)</para>
</listitem>
            <listitem><para>bool <link linkend="_classentity_1_1player_1_1Player_1a69fe13ed1e333933c482d6e17e027a9d">is_selected_breakable_obstructed</link> (self, Map map_obj)</para>
</listitem>
            <listitem><para>Self <link linkend="_classentity_1_1player_1_1Player_1a4d8a6bbc1f2497cc29c3e02a78cb8dd3">set_x</link> (self, int x)</para>
</listitem>
            <listitem><para>int <link linkend="_classentity_1_1player_1_1Player_1ac2c38bcbbdfa79be01c575d9550994c6">get_x</link> (self)</para>
</listitem>
            <listitem><para>Self <link linkend="_classentity_1_1player_1_1Player_1aa11fbaaaabcddb008afbed71a1f0bfbc">set_y</link> (self, int y)</para>
</listitem>
            <listitem><para>int <link linkend="_classentity_1_1player_1_1Player_1ad3cdd92868b226021ab2ba048c33ac08">get_y</link> (self)</para>
</listitem>
            <listitem><para>int <link linkend="_classentity_1_1player_1_1Player_1a9c817d804f63f0bb3c29f4f1d5f76bf0">get_absolute_x</link> (self, Map map_obj)</para>
</listitem>
            <listitem><para>int <link linkend="_classentity_1_1player_1_1Player_1a47dd02c36e0afc9bb320ce3afef8abe3">get_absolute_y</link> (self, Map map_obj)</para>
</listitem>
            <listitem><para>float <link linkend="_classentity_1_1player_1_1Player_1a232af0ed90134e1b72bd0e79c1d9f92c">get_coefficient_from_center_x</link> (self, int parent_width)</para>
</listitem>
            <listitem><para>float <link linkend="_classentity_1_1player_1_1Player_1a6ca5781f68338b47e35bb26da6946b91">get_coefficient_from_center_y</link> (self, int parent_height)</para>
</listitem>
            <listitem><para>tuple[int, int] <link linkend="_classentity_1_1player_1_1Player_1a1cb32b0d2d3b61d18ffa23503786ef8d">get_pointing_at</link> (self)</para>
</listitem>
            <listitem><para>int <link linkend="_classentity_1_1player_1_1Player_1a3a630be721afa939ca6d89d6a78fd922">get_selected_tile_x</link> (self)</para>
</listitem>
            <listitem><para>int <link linkend="_classentity_1_1player_1_1Player_1a3aee04b005560bcb0cad8093b610a150">get_selected_tile_y</link> (self)</para>
</listitem>
            <listitem><para>Self <link linkend="_classentity_1_1player_1_1Player_1a75cc08262c70587846d3cbce9893ee35">set_health</link> (self, int <link linkend="_classentity_1_1player_1_1Player_1a66255d70b37666e0a0995d54d22fe25b">health</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_classentity_1_1player_1_1Player_1a5bb0ef0040a075e0571205fd39ad0900">get_health</link> (self)</para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1ae4fc63e35a74cd67ffc510e13e3a9712">set_player_name</link> (self, str <link linkend="_classentity_1_1player_1_1Player_1ae4f4074ba8094775ee931b0804d6c8e0">player_name</link>)</para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1a1967b97c6167082e966ccba4685a158d">get_player_name</link> (self)</para>
</listitem>
            <listitem><para>list[bool] <link linkend="_classentity_1_1player_1_1Player_1ac10043eefe29f294838ea59340469d28">get_walls</link> (self, Map map_obj)</para>
</listitem>
            <listitem><para>None <link linkend="_classentity_1_1player_1_1Player_1a8243c65f9bd680eb4cfebbc72d71e59c">set_ideal_spawn_point</link> (self, Map map_obj, Camera camera_obj, int nb_attempts=5)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1a248253a14c31f4a9581577d3b841744e">edges</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1acd7de28913b58f7ba402a1212e8e1b32">main_hud</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1ae4f4074ba8094775ee931b0804d6c8e0">player_name</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1a76c5eb04178532378bda31fd8c9fabb1">breaking</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1acea40772d8313c9bbbe0152c55c582d3">selected_tile_x</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1a83a224799adf0ed4558ae09811000dea">selected_tile_y</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1a4349d9fd6b507aaf1b2a29340146b225">screen_x</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1a259d03b6b673fcb71a3bb54db391b280">screen_y</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1a74b6d7e01d8202946ea62d150fa31174">width</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1a8d94cdcaafe3ccb6794b10353cf37a2a">height</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1ad0d96f20cca2a9a493501cfcd39c1f80">selected_tile_sx</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1a85f42508b3b7da3f481fb7513e320516">selected_tile_sy</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1a0b8d8dcde32c63da2850a813c18288f0">pointing_at</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1ac450a4c66da2acb004a2954d6dfa3a4d">move</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1ac58660f5e4b6369f8d4280c720c67982">velocity_x</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1a09943533b5e5a840bf012ebaabe7d7b5">velocity_y</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1a7c2e96872afe60714eaeb261bc639e46">hurt</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1a66255d70b37666e0a0995d54d22fe25b">health</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1ad522fc5da677a4b49b8b83a789126460">breaking_tile</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1a23aeaaf5c001a9706ae30533b56a79c2">prev_selected_tile</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_classentity_1_1player_1_1Player_1a98f5bc4681992c7cd11472765a041d8f">TIMERS_COUNT</link> = 2</para>
</listitem>
            <listitem><para>int <link linkend="_classentity_1_1player_1_1Player_1a7af13c9b3a48f31142417667c8437afe">MINING_TIMER</link> = 0</para>
</listitem>
            <listitem><para>int <link linkend="_classentity_1_1player_1_1Player_1a7af133b2468f2bdba4869a0b9b0d781f">DAMAGE_TIMER</link> = 1</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1a812b0e8d385e586b89482e50aab85a83">_x</link></para>
</listitem>
            <listitem><para><link linkend="_classentity_1_1player_1_1Player_1a8bc344ca55089329a9e4e6db79eaf2a3">_y</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para><literallayout><computeroutput>Class for creating a player.
</computeroutput></literallayout> </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classentity_1_1player_1_1Player_1ac139a84f7aaa64b903c90bad4b2054d7"/><section>
    <title>__init__()</title>
<indexterm><primary>__init__</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>__init__</secondary></indexterm>
<para><computeroutput> None entity.player.Player.__init__ ( self, int  x = <computeroutput>0</computeroutput>
, int  y = <computeroutput>0</computeroutput>
, int  speed = <computeroutput>50</computeroutput>
)</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classentity_1_1player_1_1Player_1a0dea8ed7462593a16c35b885e7610af5"/><section>
    <title>break_tile()</title>
<indexterm><primary>break_tile</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>break_tile</secondary></indexterm>
<para><computeroutput> None entity.player.Player.break_tile ( self,  game)</computeroutput></para>
<para><literallayout><computeroutput>Break a map tile and update map surfaces.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a9c673e4056ff93b088c2a53e7ee9baeb"/><section>
    <title>can_break_breakable()</title>
<indexterm><primary>can_break_breakable</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>can_break_breakable</secondary></indexterm>
<para><computeroutput> bool entity.player.Player.can_break_breakable ( self, Map map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Returns True if the player is able to access and break a breakable tile.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a088e799a0514065ae12b4a73f8af31d7"/><section>
    <title>draw()</title>
<indexterm><primary>draw</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>draw</secondary></indexterm>
<para><computeroutput> None entity.player.Player.draw ( self,  game)</computeroutput></para>
<para><literallayout><computeroutput>Draw the player to the screen.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a844c4cb1da3e650125e1f0a5b519051e"/><section>
    <title>draw_gun_pointer()</title>
<indexterm><primary>draw_gun_pointer</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>draw_gun_pointer</secondary></indexterm>
<para><computeroutput>entity.player.Player.draw_gun_pointer ( self,  game)</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a25aae6183470550f61ac756e31065b38"/><section>
    <title>draw_selection_grid()</title>
<indexterm><primary>draw_selection_grid</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>draw_selection_grid</secondary></indexterm>
<para><computeroutput> None entity.player.Player.draw_selection_grid ( self,  game)</computeroutput></para>
<para><literallayout><computeroutput>Draw the player tile selection grid to the screen.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1afd7ec41e0803d4914f8273e37e877998"/><section>
    <title>events()</title>
<indexterm><primary>events</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>events</secondary></indexterm>
<para><computeroutput> None entity.player.Player.events ( self,  game,  map_obj, pygame.event.Event | pygame.event.EventType e)</computeroutput></para>
<para><literallayout><computeroutput>Track the player events.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a9c817d804f63f0bb3c29f4f1d5f76bf0"/><section>
    <title>get_absolute_x()</title>
<indexterm><primary>get_absolute_x</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>get_absolute_x</secondary></indexterm>
<para><computeroutput> int entity.player.Player.get_absolute_x ( self, Map map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Return the player&apos;s x position as if the map&apos;s top-left corner were to be positioned at the origin (0, 0).
This signifies that the returned value will always be positive.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a47dd02c36e0afc9bb320ce3afef8abe3"/><section>
    <title>get_absolute_y()</title>
<indexterm><primary>get_absolute_y</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>get_absolute_y</secondary></indexterm>
<para><computeroutput> int entity.player.Player.get_absolute_y ( self, Map map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Return the player&apos;s y position as if the map&apos;s top-left corner were to be positioned at the origin (0, 0).
This signifies that the returned value will always be positive.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a232af0ed90134e1b72bd0e79c1d9f92c"/><section>
    <title>get_coefficient_from_center_x()</title>
<indexterm><primary>get_coefficient_from_center_x</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>get_coefficient_from_center_x</secondary></indexterm>
<para><computeroutput> float entity.player.Player.get_coefficient_from_center_x ( self, int parent_width)</computeroutput></para>
<para><literallayout><computeroutput>Return the coefficient indicating how far the player is away from the horizontal center of the screen.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a6ca5781f68338b47e35bb26da6946b91"/><section>
    <title>get_coefficient_from_center_y()</title>
<indexterm><primary>get_coefficient_from_center_y</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>get_coefficient_from_center_y</secondary></indexterm>
<para><computeroutput> float entity.player.Player.get_coefficient_from_center_y ( self, int parent_height)</computeroutput></para>
<para><literallayout><computeroutput>Return the coefficient indicating how far the player is away from the vertical center of the screen.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a5bb0ef0040a075e0571205fd39ad0900"/><section>
    <title>get_health()</title>
<indexterm><primary>get_health</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>get_health</secondary></indexterm>
<para><computeroutput> int entity.player.Player.get_health ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the player&apos;s health.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a777988331f4291d4628fbb51a162ea20"/><section>
    <title>get_held_item()</title>
<indexterm><primary>get_held_item</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>get_held_item</secondary></indexterm>
<para><computeroutput> bool entity.player.Player.get_held_item ( self)</computeroutput></para>
<para><literallayout><computeroutput>Returns item held by player.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a1967b97c6167082e966ccba4685a158d"/><section>
    <title>get_player_name()</title>
<indexterm><primary>get_player_name</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>get_player_name</secondary></indexterm>
<para><computeroutput>entity.player.Player.get_player_name ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the player&apos;s in-game name.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a1cb32b0d2d3b61d18ffa23503786ef8d"/><section>
    <title>get_pointing_at()</title>
<indexterm><primary>get_pointing_at</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>get_pointing_at</secondary></indexterm>
<para><computeroutput> tuple[int, int] entity.player.Player.get_pointing_at ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the pointing-at position of the player.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a3a630be721afa939ca6d89d6a78fd922"/><section>
    <title>get_selected_tile_x()</title>
<indexterm><primary>get_selected_tile_x</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>get_selected_tile_x</secondary></indexterm>
<para><computeroutput> int entity.player.Player.get_selected_tile_x ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the selected tile&apos;s x position.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a3aee04b005560bcb0cad8093b610a150"/><section>
    <title>get_selected_tile_y()</title>
<indexterm><primary>get_selected_tile_y</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>get_selected_tile_y</secondary></indexterm>
<para><computeroutput> int entity.player.Player.get_selected_tile_y ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the selected tile&apos;s y position.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1ac10043eefe29f294838ea59340469d28"/><section>
    <title>get_walls()</title>
<indexterm><primary>get_walls</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>get_walls</secondary></indexterm>
<para><computeroutput> list[bool] entity.player.Player.get_walls ( self, Map map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Return the tiles of type BREAKABLE surrounding the player.
This is used for determining what tiles the player could potentially collide with.
The order of the tiles are MOVE_LEFT, MOVE_RIGHT, MOVE_UP, MOVE_DOWN, UPPER MOVE_LEFT, UPPER MOVE_RIGHT, LOWER MOVE_LEFT, LOWER MOVE_RIGHT.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1ac2c38bcbbdfa79be01c575d9550994c6"/><section>
    <title>get_x()</title>
<indexterm><primary>get_x</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>get_x</secondary></indexterm>
<para><computeroutput> int entity.player.Player.get_x ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the player&apos;s x position.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1ad3cdd92868b226021ab2ba048c33ac08"/><section>
    <title>get_y()</title>
<indexterm><primary>get_y</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>get_y</secondary></indexterm>
<para><computeroutput> int entity.player.Player.get_y ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the player&apos;s y position.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a5f011e6d3f71afd6dde810615da1e5f4"/><section>
    <title>has_selected_breakable()</title>
<indexterm><primary>has_selected_breakable</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>has_selected_breakable</secondary></indexterm>
<para><computeroutput> bool entity.player.Player.has_selected_breakable ( self, Map map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Returns True if the player has selected a breakable tile.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a0f4a06f686d279aacd4e4fd96145e964"/><section>
    <title>init()</title>
<indexterm><primary>init</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>init</secondary></indexterm>
<para><computeroutput> None entity.player.Player.init ( self,  game)</computeroutput></para>
<para><literallayout><computeroutput>Define the player attributes that depend on the given game object.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a745d4beb0c9c6a6859283ad99233b3d9"/><section>
    <title>is_dead()</title>
<indexterm><primary>is_dead</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>is_dead</secondary></indexterm>
<para><computeroutput> bool entity.player.Player.is_dead ( self)</computeroutput></para>
<para><literallayout><computeroutput>Returns True if the player is dead.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1afa56e7928f74c7a41867f01728582528"/><section>
    <title>is_in_lava()</title>
<indexterm><primary>is_in_lava</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>is_in_lava</secondary></indexterm>
<para><computeroutput> bool entity.player.Player.is_in_lava ( self, Map map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Returns True if the player is in lava.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1ac2a32dfc71633031a14e53dd50a1c01a"/><section>
    <title>is_in_lethal_tile()</title>
<indexterm><primary>is_in_lethal_tile</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>is_in_lethal_tile</secondary></indexterm>
<para><computeroutput> bool entity.player.Player.is_in_lethal_tile ( self, Map map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Returns True if the player is touching a lethal tile.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1ae81cad8591f0b46786088a12f8ec7519"/><section>
    <title>is_in_wall()</title>
<indexterm><primary>is_in_wall</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>is_in_wall</secondary></indexterm>
<para><computeroutput> bool entity.player.Player.is_in_wall ( self, Map map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Returns True if the player is surrounded by tiles with collision.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1acfb6dea96f615b76de23b4501748b3d8"/><section>
    <title>is_in_water()</title>
<indexterm><primary>is_in_water</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>is_in_water</secondary></indexterm>
<para><computeroutput> bool entity.player.Player.is_in_water ( self, Map map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Returns True if the player is in water.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a2acb0f55e61c149a8d56d6848e60a34f"/><section>
    <title>is_moving_down()</title>
<indexterm><primary>is_moving_down</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>is_moving_down</secondary></indexterm>
<para><computeroutput> bool entity.player.Player.is_moving_down ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return True if the player is moving down.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a394cf963598eef1f0f884aeffba2aa49"/><section>
    <title>is_moving_left()</title>
<indexterm><primary>is_moving_left</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>is_moving_left</secondary></indexterm>
<para><computeroutput> bool entity.player.Player.is_moving_left ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return True if the player is moving left.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1ad943f7e66143bfa78ea42fa6cd8e6711"/><section>
    <title>is_moving_right()</title>
<indexterm><primary>is_moving_right</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>is_moving_right</secondary></indexterm>
<para><computeroutput> bool entity.player.Player.is_moving_right ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return True if the player is moving right.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1aa3ac9680dd98c07f8e24cabf3990e5f3"/><section>
    <title>is_moving_up()</title>
<indexterm><primary>is_moving_up</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>is_moving_up</secondary></indexterm>
<para><computeroutput> bool entity.player.Player.is_moving_up ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return True if the player is moving up.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a5dc1059f5d598433a83e59d6d634149b"/><section>
    <title>is_near_bottom_edge()</title>
<indexterm><primary>is_near_bottom_edge</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>is_near_bottom_edge</secondary></indexterm>
<para><computeroutput> bool entity.player.Player.is_near_bottom_edge ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return True if the player is to the bottom-center of the screen.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a984baf0e2cabf4e92ff99f205d4722e5"/><section>
    <title>is_near_left_edge()</title>
<indexterm><primary>is_near_left_edge</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>is_near_left_edge</secondary></indexterm>
<para><computeroutput> bool entity.player.Player.is_near_left_edge ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return True if the player is at the left-center of the screen.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a595200451bbc4a0a14d0eafb092b13df"/><section>
    <title>is_near_right_edge()</title>
<indexterm><primary>is_near_right_edge</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>is_near_right_edge</secondary></indexterm>
<para><computeroutput> bool entity.player.Player.is_near_right_edge ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return True if the player is to the right-center of the screen.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1afc0d3650583ad35f979974148d1324b3"/><section>
    <title>is_near_top_edge()</title>
<indexterm><primary>is_near_top_edge</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>is_near_top_edge</secondary></indexterm>
<para><computeroutput> bool entity.player.Player.is_near_top_edge ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return True if the player is at the top-center of the screen.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a69fe13ed1e333933c482d6e17e027a9d"/><section>
    <title>is_selected_breakable_obstructed()</title>
<indexterm><primary>is_selected_breakable_obstructed</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>is_selected_breakable_obstructed</secondary></indexterm>
<para><computeroutput> bool entity.player.Player.is_selected_breakable_obstructed ( self, Map map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Returns True if the selected breakable tile is obstructed by other tiles with collision.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a9049d1072511b52819c82110f333162c"/><section>
    <title>reset()</title>
<indexterm><primary>reset</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>reset</secondary></indexterm>
<para><computeroutput> None entity.player.Player.reset ( self, Map map_obj, Camera camera_obj)</computeroutput></para>
<para><literallayout><computeroutput>Reset the player&apos;s general attributes.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a75cc08262c70587846d3cbce9893ee35"/><section>
    <title>set_health()</title>
<indexterm><primary>set_health</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>set_health</secondary></indexterm>
<para><computeroutput> Self entity.player.Player.set_health ( self, int health)</computeroutput></para>
<para><literallayout><computeroutput>Set the player&apos;s health, then return the player itself.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a8243c65f9bd680eb4cfebbc72d71e59c"/><section>
    <title>set_ideal_spawn_point()</title>
<indexterm><primary>set_ideal_spawn_point</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>set_ideal_spawn_point</secondary></indexterm>
<para><computeroutput> None entity.player.Player.set_ideal_spawn_point ( self, Map map_obj, Camera camera_obj, int  nb_attempts = <computeroutput>5</computeroutput>
)</computeroutput></para>
<para><literallayout><computeroutput>Find the ideal starting position for the player when creating a new map.
By default, five consecutive failed attempts will replace the tile at the last randomised tile position
to plains and place the player there.
Setting the number of attempts to anything less than 1 will raise an exception.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1ae4fc63e35a74cd67ffc510e13e3a9712"/><section>
    <title>set_player_name()</title>
<indexterm><primary>set_player_name</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>set_player_name</secondary></indexterm>
<para><computeroutput>entity.player.Player.set_player_name ( self, str player_name)</computeroutput></para>
<para><literallayout><computeroutput>Set the player&apos;s in-game name, then return the player itself.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a4d8a6bbc1f2497cc29c3e02a78cb8dd3"/><section>
    <title>set_x()</title>
<indexterm><primary>set_x</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>set_x</secondary></indexterm>
<para><computeroutput> Self entity.player.Player.set_x ( self, int x)</computeroutput></para>
<para><literallayout><computeroutput>Set the player&apos;s x position, then return the player itself.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1aa11fbaaaabcddb008afbed71a1f0bfbc"/><section>
    <title>set_y()</title>
<indexterm><primary>set_y</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>set_y</secondary></indexterm>
<para><computeroutput> Self entity.player.Player.set_y ( self, int y)</computeroutput></para>
<para><literallayout><computeroutput>Set the player&apos;s y position, then return the player itself.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a48bea1ff1a5d946a280ed8124b1c1f54"/><section>
    <title>update()</title>
<indexterm><primary>update</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>update</secondary></indexterm>
<para><computeroutput> None entity.player.Player.update ( self,  game, Map map_obj)</computeroutput></para>
<para><literallayout><computeroutput>Update the player.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a7ece2718b2026baeffbfd07f25aae393"/><section>
    <title>update_ui()</title>
<indexterm><primary>update_ui</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>update_ui</secondary></indexterm>
<para><computeroutput> None entity.player.Player.update_ui ( self)</computeroutput></para>
<para><literallayout><computeroutput>Update the player GUI.
</computeroutput></literallayout> </para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classentity_1_1player_1_1Player_1a812b0e8d385e586b89482e50aab85a83"/><section>
    <title>_x</title>
<indexterm><primary>_x</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>_x</secondary></indexterm>
<para><computeroutput>entity.player.Player._x<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a8bc344ca55089329a9e4e6db79eaf2a3"/><section>
    <title>_y</title>
<indexterm><primary>_y</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>_y</secondary></indexterm>
<para><computeroutput>entity.player.Player._y<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a76c5eb04178532378bda31fd8c9fabb1"/><section>
    <title>breaking</title>
<indexterm><primary>breaking</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>breaking</secondary></indexterm>
<para><computeroutput>entity.player.Player.breaking</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1ad522fc5da677a4b49b8b83a789126460"/><section>
    <title>breaking_tile</title>
<indexterm><primary>breaking_tile</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>breaking_tile</secondary></indexterm>
<para><computeroutput>entity.player.Player.breaking_tile</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a7af133b2468f2bdba4869a0b9b0d781f"/><section>
    <title>DAMAGE_TIMER</title>
<indexterm><primary>DAMAGE_TIMER</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>DAMAGE_TIMER</secondary></indexterm>
<para><computeroutput>int entity.player.Player.DAMAGE_TIMER = 1<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a248253a14c31f4a9581577d3b841744e"/><section>
    <title>edges</title>
<indexterm><primary>edges</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>edges</secondary></indexterm>
<para><computeroutput>entity.player.Player.edges</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a66255d70b37666e0a0995d54d22fe25b"/><section>
    <title>health</title>
<indexterm><primary>health</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>health</secondary></indexterm>
<para><computeroutput>entity.player.Player.health</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a8d94cdcaafe3ccb6794b10353cf37a2a"/><section>
    <title>height</title>
<indexterm><primary>height</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>height</secondary></indexterm>
<para><computeroutput>entity.player.Player.height</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a7c2e96872afe60714eaeb261bc639e46"/><section>
    <title>hurt</title>
<indexterm><primary>hurt</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>hurt</secondary></indexterm>
<para><computeroutput>entity.player.Player.hurt</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1acd7de28913b58f7ba402a1212e8e1b32"/><section>
    <title>main_hud</title>
<indexterm><primary>main_hud</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>main_hud</secondary></indexterm>
<para><computeroutput>entity.player.Player.main_hud</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a7af13c9b3a48f31142417667c8437afe"/><section>
    <title>MINING_TIMER</title>
<indexterm><primary>MINING_TIMER</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>MINING_TIMER</secondary></indexterm>
<para><computeroutput>int entity.player.Player.MINING_TIMER = 0<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1ac450a4c66da2acb004a2954d6dfa3a4d"/><section>
    <title>move</title>
<indexterm><primary>move</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>move</secondary></indexterm>
<para><computeroutput>entity.player.Player.move</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1ae4f4074ba8094775ee931b0804d6c8e0"/><section>
    <title>player_name</title>
<indexterm><primary>player_name</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>player_name</secondary></indexterm>
<para><computeroutput>entity.player.Player.player_name</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a0b8d8dcde32c63da2850a813c18288f0"/><section>
    <title>pointing_at</title>
<indexterm><primary>pointing_at</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>pointing_at</secondary></indexterm>
<para><computeroutput>entity.player.Player.pointing_at</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a23aeaaf5c001a9706ae30533b56a79c2"/><section>
    <title>prev_selected_tile</title>
<indexterm><primary>prev_selected_tile</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>prev_selected_tile</secondary></indexterm>
<para><computeroutput>entity.player.Player.prev_selected_tile</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a4349d9fd6b507aaf1b2a29340146b225"/><section>
    <title>screen_x</title>
<indexterm><primary>screen_x</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>screen_x</secondary></indexterm>
<para><computeroutput>entity.player.Player.screen_x</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a259d03b6b673fcb71a3bb54db391b280"/><section>
    <title>screen_y</title>
<indexterm><primary>screen_y</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>screen_y</secondary></indexterm>
<para><computeroutput>entity.player.Player.screen_y</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1ad0d96f20cca2a9a493501cfcd39c1f80"/><section>
    <title>selected_tile_sx</title>
<indexterm><primary>selected_tile_sx</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>selected_tile_sx</secondary></indexterm>
<para><computeroutput>entity.player.Player.selected_tile_sx</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a85f42508b3b7da3f481fb7513e320516"/><section>
    <title>selected_tile_sy</title>
<indexterm><primary>selected_tile_sy</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>selected_tile_sy</secondary></indexterm>
<para><computeroutput>entity.player.Player.selected_tile_sy</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1acea40772d8313c9bbbe0152c55c582d3"/><section>
    <title>selected_tile_x</title>
<indexterm><primary>selected_tile_x</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>selected_tile_x</secondary></indexterm>
<para><computeroutput>entity.player.Player.selected_tile_x</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a83a224799adf0ed4558ae09811000dea"/><section>
    <title>selected_tile_y</title>
<indexterm><primary>selected_tile_y</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>selected_tile_y</secondary></indexterm>
<para><computeroutput>entity.player.Player.selected_tile_y</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a98f5bc4681992c7cd11472765a041d8f"/><section>
    <title>TIMERS_COUNT</title>
<indexterm><primary>TIMERS_COUNT</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>TIMERS_COUNT</secondary></indexterm>
<para><computeroutput>int entity.player.Player.TIMERS_COUNT = 2<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1ac58660f5e4b6369f8d4280c720c67982"/><section>
    <title>velocity_x</title>
<indexterm><primary>velocity_x</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>velocity_x</secondary></indexterm>
<para><computeroutput>entity.player.Player.velocity_x</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a09943533b5e5a840bf012ebaabe7d7b5"/><section>
    <title>velocity_y</title>
<indexterm><primary>velocity_y</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>velocity_y</secondary></indexterm>
<para><computeroutput>entity.player.Player.velocity_y</computeroutput></para></section>
<anchor xml:id="_classentity_1_1player_1_1Player_1a74b6d7e01d8202946ea62d150fa31174"/><section>
    <title>width</title>
<indexterm><primary>width</primary><secondary>entity.player.Player</secondary></indexterm>
<indexterm><primary>entity.player.Player</primary><secondary>width</secondary></indexterm>
<para><computeroutput>entity.player.Player.width</computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
<link linkend="_player_8py">player.py</link></section>
</section>
