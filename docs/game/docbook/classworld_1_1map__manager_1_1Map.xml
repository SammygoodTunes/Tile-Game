<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classworld_1_1map__manager_1_1Map" xml:lang="en-US">
<title>world.map_manager.Map Class Reference</title>
<indexterm><primary>world.map_manager.Map</primary></indexterm>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>None <link linkend="_classworld_1_1map__manager_1_1Map_1a9e94bb3ba03942ec9a9767b66d5dbe90">__init__</link> (self, int width, int height)</para>
</listitem>
            <listitem><para>None <link linkend="_classworld_1_1map__manager_1_1Map_1a7369b649ac42d853c864a0b32f72afe0">generate</link> (self, game)</para>
</listitem>
            <listitem><para>None <link linkend="_classworld_1_1map__manager_1_1Map_1aa4e321901f49c1acded7f25304eb706e">regenerate</link> (self, game)</para>
</listitem>
            <listitem><para>None <link linkend="_classworld_1_1map__manager_1_1Map_1a3751fc722c1e9fc58027f82953607ecd">update</link> (self, window_obj, player_obj)</para>
</listitem>
            <listitem><para>tuple[int, int] <link linkend="_classworld_1_1map__manager_1_1Map_1a9a05cf8ef2769edb78ccf004c073a441">get_tile_pos</link> (self, int x, int y)</para>
</listitem>
            <listitem><para>tuple[int, int] <link linkend="_classworld_1_1map__manager_1_1Map_1a253d1d819068cf08836e28cd2e2f14be">get_strict_tile_pos</link> (self, int x, int y)</para>
</listitem>
            <listitem><para>tuple[int, int] <link linkend="_classworld_1_1map__manager_1_1Map_1a3aa9b82a7a4f5a8ae30ac6818aa9535f">tile_to_world_pos</link> (self, int tile_x, int tile_y)</para>
</listitem>
            <listitem><para>bool <link linkend="_classworld_1_1map__manager_1_1Map_1ae06bcc49ea03897d0274963f716ec759">is_ready</link> (self)</para>
</listitem>
            <listitem><para>Self <link linkend="_classworld_1_1map__manager_1_1Map_1a406e46b444f631c620146164e9809dcf">set_tile</link> (self, int tile_x, int tile_y, Tile tile)</para>
</listitem>
            <listitem><para>Tile <link linkend="_classworld_1_1map__manager_1_1Map_1ae597f285e50df73bb9dc7e4ed5e4c521">get_tile</link> (self, int tile_x, int tile_y)</para>
</listitem>
            <listitem><para>Self <link linkend="_classworld_1_1map__manager_1_1Map_1ad4fcc93d55eb976fd386f571688e5999">set_data</link> (self, list[Tile] data)</para>
</listitem>
            <listitem><para>list[Tile] <link linkend="_classworld_1_1map__manager_1_1Map_1aebd35b48367f484ee520fd73dbc08f1d">get_data</link> (self)</para>
</listitem>
            <listitem><para><link linkend="_classworld_1_1map__manager_1_1Map_1a3fb29639865be0fa6481292397341eb1">set_dynatile_data</link> (self, list[bool] dynatile_data)</para>
</listitem>
            <listitem><para>list[bool] <link linkend="_classworld_1_1map__manager_1_1Map_1ac32ec46d7942e7762a1d628b300e1d37">get_dynatile_data</link> (self)</para>
</listitem>
            <listitem><para>Self <link linkend="_classworld_1_1map__manager_1_1Map_1af7cf16d45cecfaf54de6b6da3c2ad0de">set_dynatile</link> (self, int x, int y, bool state)</para>
</listitem>
            <listitem><para>bool <link linkend="_classworld_1_1map__manager_1_1Map_1ae7ee08704c02be7114501cb4f80b71c0">get_dynatile</link> (self, int x, int y)</para>
</listitem>
            <listitem><para>Self <link linkend="_classworld_1_1map__manager_1_1Map_1a884f04e840aaaebc7b95685856ac91ea">randomise_seed</link> (self)</para>
</listitem>
            <listitem><para>Self <link linkend="_classworld_1_1map__manager_1_1Map_1ac28823d42a7a20a08e3ab64533efef35">set_seed</link> (self, int <link linkend="_classworld_1_1map__manager_1_1Map_1a01af2afc789d9c88b716d3c784911763">_seed</link>)</para>
</listitem>
            <listitem><para>int <link linkend="_classworld_1_1map__manager_1_1Map_1a10b30211404a9f942a8d7aeeab42e159">get_seed</link> (self)</para>
</listitem>
            <listitem><para>Self <link linkend="_classworld_1_1map__manager_1_1Map_1ab6cfab3e51e3ccf6243d4d43f214e278">set_x</link> (self, int x)</para>
</listitem>
            <listitem><para>int <link linkend="_classworld_1_1map__manager_1_1Map_1a3bdfdcfce9c3a8fafa565a9afb7ed440">get_x</link> (self)</para>
</listitem>
            <listitem><para>Self <link linkend="_classworld_1_1map__manager_1_1Map_1ad617363e35390aab1fcb844223372cdd">set_y</link> (self, int y)</para>
</listitem>
            <listitem><para>int <link linkend="_classworld_1_1map__manager_1_1Map_1a4a3cdc50deac2fe2cff50ef0c1cc2ed0">get_y</link> (self)</para>
</listitem>
            <listitem><para>int <link linkend="_classworld_1_1map__manager_1_1Map_1ab9664d0289d717a492c43d00ac0ffa7a">get_width_in_tiles</link> (self)</para>
</listitem>
            <listitem><para>int <link linkend="_classworld_1_1map__manager_1_1Map_1a60e675720af6c33327ce10caa30effa8">get_width_in_pixels</link> (self)</para>
</listitem>
            <listitem><para>int <link linkend="_classworld_1_1map__manager_1_1Map_1a06ce97f02e7c31430505254fd92e0681">get_height_in_tiles</link> (self)</para>
</listitem>
            <listitem><para>int <link linkend="_classworld_1_1map__manager_1_1Map_1a51d05e3efe330c2aac66b6aae728a13f">get_height_in_pixels</link> (self)</para>
</listitem>
            <listitem><para>Surface <link linkend="_classworld_1_1map__manager_1_1Map_1ac97ce61970efd47a7259c0305c69f963">get_surface</link> (self)</para>
</listitem>
            <listitem><para>Surface <link linkend="_classworld_1_1map__manager_1_1Map_1ac6bcc533f8575e867df89cefdda3af82">get_dynatile_surface</link> (self)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>tuple[int, int] <link linkend="_classworld_1_1map__manager_1_1Map_1a8b9f8333480325a0de941708c8c9fe0c">tile_to_screen_pos</link> (game, int tile_x, int tile_y)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classworld_1_1map__manager_1_1Map_1a53b89b13ce52b571e4198c5a11a65ae0">perlin_noise</link></para>
</listitem>
            <listitem><para><link linkend="_classworld_1_1map__manager_1_1Map_1ad65d73642953633f7d900822c9c07787">generate_data_event</link></para>
</listitem>
            <listitem><para><link linkend="_classworld_1_1map__manager_1_1Map_1a1026345a49bbe0b7a681b090261cb82c">load_data_event</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para>tuple <link linkend="_classworld_1_1map__manager_1_1Map_1a8eae51ab1efade491c363b863816dfb3">DEFAULT</link></para>
</listitem>
            <listitem><para>int <link linkend="_classworld_1_1map__manager_1_1Map_1a2945bc9b24412ad925952b46388ebc72">SEED_RANGE</link> = 2 ** 32</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>None <link linkend="_classworld_1_1map__manager_1_1Map_1a71699f68f79842e870739d89eec001e9">_generate_data</link> (self, game)</para>
</listitem>
            <listitem><para>None <link linkend="_classworld_1_1map__manager_1_1Map_1a47a83abc109f219f5146985bf9d6e55c">_load_data</link> (self, game)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classworld_1_1map__manager_1_1Map_1a01af2afc789d9c88b716d3c784911763">_seed</link></para>
</listitem>
            <listitem><para><link linkend="_classworld_1_1map__manager_1_1Map_1a16a61bf50eec085775edada296091b4c">_x</link></para>
</listitem>
            <listitem><para><link linkend="_classworld_1_1map__manager_1_1Map_1adfbf908d6b22c9b28e77a555bdb561f9">_y</link></para>
</listitem>
            <listitem><para><link linkend="_classworld_1_1map__manager_1_1Map_1afc5aee00ce6d3b7e1cb048bcf908967a">_width</link></para>
</listitem>
            <listitem><para><link linkend="_classworld_1_1map__manager_1_1Map_1af42db3e4aa3142a31f587a9cb2967a72">_height</link></para>
</listitem>
            <listitem><para><link linkend="_classworld_1_1map__manager_1_1Map_1a42adbc36b9af00dcfdd57b2a0d1bd6e9">_surface</link></para>
</listitem>
            <listitem><para><link linkend="_classworld_1_1map__manager_1_1Map_1a71980cc400700fecfe72535098390515">_dynatile_surface</link></para>
</listitem>
            <listitem><para><link linkend="_classworld_1_1map__manager_1_1Map_1a268983063ebe899899eaa120f7829535">_ready</link></para>
</listitem>
            <listitem><para><link linkend="_classworld_1_1map__manager_1_1Map_1a3115ee328e5316fff5e7a848851684dc">_dynatile_data</link></para>
</listitem>
            <listitem><para><link linkend="_classworld_1_1map__manager_1_1Map_1a78803eb44858ece1544c3ae36e4476e2">_data</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para><literallayout><computeroutput>Class for creating a Map.
</computeroutput></literallayout> </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a9e94bb3ba03942ec9a9767b66d5dbe90"/><section>
    <title>__init__()</title>
<indexterm><primary>__init__</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>__init__</secondary></indexterm>
<para><computeroutput> None world.map_manager.Map.__init__ ( self, int width, int height)</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a71699f68f79842e870739d89eec001e9"/><section>
    <title>_generate_data()</title>
<indexterm><primary>_generate_data</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>_generate_data</secondary></indexterm>
<para><computeroutput> None world.map_manager.Map._generate_data ( self,  game)<computeroutput>[protected]</computeroutput></computeroutput></para>
<para><literallayout><computeroutput>Internal threaded method for generating map data.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a47a83abc109f219f5146985bf9d6e55c"/><section>
    <title>_load_data()</title>
<indexterm><primary>_load_data</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>_load_data</secondary></indexterm>
<para><computeroutput> None world.map_manager.Map._load_data ( self,  game)<computeroutput>[protected]</computeroutput></computeroutput></para>
<para><literallayout><computeroutput>Internal threaded method for loading map data.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a7369b649ac42d853c864a0b32f72afe0"/><section>
    <title>generate()</title>
<indexterm><primary>generate</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>generate</secondary></indexterm>
<para><computeroutput> None world.map_manager.Map.generate ( self,  game)</computeroutput></para>
<para><literallayout><computeroutput>Generate the map data.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1aebd35b48367f484ee520fd73dbc08f1d"/><section>
    <title>get_data()</title>
<indexterm><primary>get_data</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>get_data</secondary></indexterm>
<para><computeroutput> list[Tile] world.map_manager.Map.get_data ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the map data.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1ae7ee08704c02be7114501cb4f80b71c0"/><section>
    <title>get_dynatile()</title>
<indexterm><primary>get_dynatile</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>get_dynatile</secondary></indexterm>
<para><computeroutput> bool world.map_manager.Map.get_dynatile ( self, int x, int y)</computeroutput></para>
<para><literallayout><computeroutput>Return the dynamic tile at specified x and y tile positions.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1ac32ec46d7942e7762a1d628b300e1d37"/><section>
    <title>get_dynatile_data()</title>
<indexterm><primary>get_dynatile_data</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>get_dynatile_data</secondary></indexterm>
<para><computeroutput> list[bool] world.map_manager.Map.get_dynatile_data ( self)</computeroutput></para>
<para><literallayout><computeroutput>Get the dynamic tile data.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1ac6bcc533f8575e867df89cefdda3af82"/><section>
    <title>get_dynatile_surface()</title>
<indexterm><primary>get_dynatile_surface</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>get_dynatile_surface</secondary></indexterm>
<para><computeroutput> Surface world.map_manager.Map.get_dynatile_surface ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the map&apos;s dynamic surface.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a51d05e3efe330c2aac66b6aae728a13f"/><section>
    <title>get_height_in_pixels()</title>
<indexterm><primary>get_height_in_pixels</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>get_height_in_pixels</secondary></indexterm>
<para><computeroutput> int world.map_manager.Map.get_height_in_pixels ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the height of the map in pixels.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a06ce97f02e7c31430505254fd92e0681"/><section>
    <title>get_height_in_tiles()</title>
<indexterm><primary>get_height_in_tiles</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>get_height_in_tiles</secondary></indexterm>
<para><computeroutput> int world.map_manager.Map.get_height_in_tiles ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the height of the map in tiles.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a10b30211404a9f942a8d7aeeab42e159"/><section>
    <title>get_seed()</title>
<indexterm><primary>get_seed</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>get_seed</secondary></indexterm>
<para><computeroutput> int world.map_manager.Map.get_seed ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the map seed.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a253d1d819068cf08836e28cd2e2f14be"/><section>
    <title>get_strict_tile_pos()</title>
<indexterm><primary>get_strict_tile_pos</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>get_strict_tile_pos</secondary></indexterm>
<para><computeroutput> tuple[int, int] world.map_manager.Map.get_strict_tile_pos ( self, int x, int y)</computeroutput></para>
<para><literallayout><computeroutput>Return the strict tile position of a world position
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1ac97ce61970efd47a7259c0305c69f963"/><section>
    <title>get_surface()</title>
<indexterm><primary>get_surface</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>get_surface</secondary></indexterm>
<para><computeroutput> Surface world.map_manager.Map.get_surface ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the map&apos;s surface.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1ae597f285e50df73bb9dc7e4ed5e4c521"/><section>
    <title>get_tile()</title>
<indexterm><primary>get_tile</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>get_tile</secondary></indexterm>
<para><computeroutput> Tile world.map_manager.Map.get_tile ( self, int tile_x, int tile_y)</computeroutput></para>
<para><literallayout><computeroutput>Return the tile at specified x and y tile positions.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a9a05cf8ef2769edb78ccf004c073a441"/><section>
    <title>get_tile_pos()</title>
<indexterm><primary>get_tile_pos</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>get_tile_pos</secondary></indexterm>
<para><computeroutput> tuple[int, int] world.map_manager.Map.get_tile_pos ( self, int x, int y)</computeroutput></para>
<para><literallayout><computeroutput>Return the tile position of a world position.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a60e675720af6c33327ce10caa30effa8"/><section>
    <title>get_width_in_pixels()</title>
<indexterm><primary>get_width_in_pixels</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>get_width_in_pixels</secondary></indexterm>
<para><computeroutput> int world.map_manager.Map.get_width_in_pixels ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the width of the map in pixels.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1ab9664d0289d717a492c43d00ac0ffa7a"/><section>
    <title>get_width_in_tiles()</title>
<indexterm><primary>get_width_in_tiles</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>get_width_in_tiles</secondary></indexterm>
<para><computeroutput> int world.map_manager.Map.get_width_in_tiles ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the width of the map in tiles.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a3bdfdcfce9c3a8fafa565a9afb7ed440"/><section>
    <title>get_x()</title>
<indexterm><primary>get_x</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>get_x</secondary></indexterm>
<para><computeroutput> int world.map_manager.Map.get_x ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the x position of the map.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a4a3cdc50deac2fe2cff50ef0c1cc2ed0"/><section>
    <title>get_y()</title>
<indexterm><primary>get_y</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>get_y</secondary></indexterm>
<para><computeroutput> int world.map_manager.Map.get_y ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return the y position of the map.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1ae06bcc49ea03897d0274963f716ec759"/><section>
    <title>is_ready()</title>
<indexterm><primary>is_ready</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>is_ready</secondary></indexterm>
<para><computeroutput> bool world.map_manager.Map.is_ready ( self)</computeroutput></para>
<para><literallayout><computeroutput>Return whether the map is ready or not.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a884f04e840aaaebc7b95685856ac91ea"/><section>
    <title>randomise_seed()</title>
<indexterm><primary>randomise_seed</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>randomise_seed</secondary></indexterm>
<para><computeroutput> Self world.map_manager.Map.randomise_seed ( self)</computeroutput></para>
<para><literallayout><computeroutput>Randomise the map seed, then return the map manager itself.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1aa4e321901f49c1acded7f25304eb706e"/><section>
    <title>regenerate()</title>
<indexterm><primary>regenerate</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>regenerate</secondary></indexterm>
<para><computeroutput> None world.map_manager.Map.regenerate ( self,  game)</computeroutput></para>
<para><literallayout><computeroutput>Regenerate the map data.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1ad4fcc93d55eb976fd386f571688e5999"/><section>
    <title>set_data()</title>
<indexterm><primary>set_data</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>set_data</secondary></indexterm>
<para><computeroutput> Self world.map_manager.Map.set_data ( self, list[Tile] data)</computeroutput></para>
<para><literallayout><computeroutput>Set the map data, then return the map manager itself.
Use default map data if no data is provided.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1af7cf16d45cecfaf54de6b6da3c2ad0de"/><section>
    <title>set_dynatile()</title>
<indexterm><primary>set_dynatile</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>set_dynatile</secondary></indexterm>
<para><computeroutput> Self world.map_manager.Map.set_dynatile ( self, int x, int y, bool state)</computeroutput></para>
<para><literallayout><computeroutput>Set the dynamic tile at specified x and y tile positions and of specified used state (bool), then return
the map manager itself.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a3fb29639865be0fa6481292397341eb1"/><section>
    <title>set_dynatile_data()</title>
<indexterm><primary>set_dynatile_data</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>set_dynatile_data</secondary></indexterm>
<para><computeroutput>world.map_manager.Map.set_dynatile_data ( self, list[bool] dynatile_data)</computeroutput></para>
<para><literallayout><computeroutput>Set the dynamic tile data, then return the map manager itself.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1ac28823d42a7a20a08e3ab64533efef35"/><section>
    <title>set_seed()</title>
<indexterm><primary>set_seed</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>set_seed</secondary></indexterm>
<para><computeroutput> Self world.map_manager.Map.set_seed ( self, int _seed)</computeroutput></para>
<para><literallayout><computeroutput>Set the map seed, then return the map manager itself.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a406e46b444f631c620146164e9809dcf"/><section>
    <title>set_tile()</title>
<indexterm><primary>set_tile</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>set_tile</secondary></indexterm>
<para><computeroutput> Self world.map_manager.Map.set_tile ( self, int tile_x, int tile_y, Tile tile)</computeroutput></para>
<para><literallayout><computeroutput>Set the tile at specified x and y tile positions and of specified tile type, then return the map manager itself.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1ab6cfab3e51e3ccf6243d4d43f214e278"/><section>
    <title>set_x()</title>
<indexterm><primary>set_x</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>set_x</secondary></indexterm>
<para><computeroutput> Self world.map_manager.Map.set_x ( self, int x)</computeroutput></para>
<para><literallayout><computeroutput>Set the x position of the map, then return the map manager itself.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1ad617363e35390aab1fcb844223372cdd"/><section>
    <title>set_y()</title>
<indexterm><primary>set_y</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>set_y</secondary></indexterm>
<para><computeroutput> Self world.map_manager.Map.set_y ( self, int y)</computeroutput></para>
<para><literallayout><computeroutput>Set the y position of the map, then return the map manager itself.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a8b9f8333480325a0de941708c8c9fe0c"/><section>
    <title>tile_to_screen_pos()</title>
<indexterm><primary>tile_to_screen_pos</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>tile_to_screen_pos</secondary></indexterm>
<para><computeroutput> tuple[int, int] world.map_manager.Map.tile_to_screen_pos ( game, int tile_x, int tile_y)<computeroutput>[static]</computeroutput></computeroutput></para>
<para><literallayout><computeroutput>Return the screen position of a tile position.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a3aa9b82a7a4f5a8ae30ac6818aa9535f"/><section>
    <title>tile_to_world_pos()</title>
<indexterm><primary>tile_to_world_pos</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>tile_to_world_pos</secondary></indexterm>
<para><computeroutput> tuple[int, int] world.map_manager.Map.tile_to_world_pos ( self, int tile_x, int tile_y)</computeroutput></para>
<para><literallayout><computeroutput>Return the world position of a tile position.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a3751fc722c1e9fc58027f82953607ecd"/><section>
    <title>update()</title>
<indexterm><primary>update</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>update</secondary></indexterm>
<para><computeroutput> None world.map_manager.Map.update ( self,  window_obj,  player_obj)</computeroutput></para>
<para><literallayout><computeroutput>Update the map (unused).
</computeroutput></literallayout> </para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a78803eb44858ece1544c3ae36e4476e2"/><section>
    <title>_data</title>
<indexterm><primary>_data</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>_data</secondary></indexterm>
<para><computeroutput>world.map_manager.Map._data<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a3115ee328e5316fff5e7a848851684dc"/><section>
    <title>_dynatile_data</title>
<indexterm><primary>_dynatile_data</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>_dynatile_data</secondary></indexterm>
<para><computeroutput>world.map_manager.Map._dynatile_data<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a71980cc400700fecfe72535098390515"/><section>
    <title>_dynatile_surface</title>
<indexterm><primary>_dynatile_surface</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>_dynatile_surface</secondary></indexterm>
<para><computeroutput>world.map_manager.Map._dynatile_surface<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1af42db3e4aa3142a31f587a9cb2967a72"/><section>
    <title>_height</title>
<indexterm><primary>_height</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>_height</secondary></indexterm>
<para><computeroutput>world.map_manager.Map._height<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a268983063ebe899899eaa120f7829535"/><section>
    <title>_ready</title>
<indexterm><primary>_ready</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>_ready</secondary></indexterm>
<para><computeroutput>world.map_manager.Map._ready<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a01af2afc789d9c88b716d3c784911763"/><section>
    <title>_seed</title>
<indexterm><primary>_seed</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>_seed</secondary></indexterm>
<para><computeroutput>world.map_manager.Map._seed<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a42adbc36b9af00dcfdd57b2a0d1bd6e9"/><section>
    <title>_surface</title>
<indexterm><primary>_surface</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>_surface</secondary></indexterm>
<para><computeroutput>world.map_manager.Map._surface<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1afc5aee00ce6d3b7e1cb048bcf908967a"/><section>
    <title>_width</title>
<indexterm><primary>_width</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>_width</secondary></indexterm>
<para><computeroutput>world.map_manager.Map._width<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a16a61bf50eec085775edada296091b4c"/><section>
    <title>_x</title>
<indexterm><primary>_x</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>_x</secondary></indexterm>
<para><computeroutput>world.map_manager.Map._x<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1adfbf908d6b22c9b28e77a555bdb561f9"/><section>
    <title>_y</title>
<indexterm><primary>_y</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>_y</secondary></indexterm>
<para><computeroutput>world.map_manager.Map._y<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a8eae51ab1efade491c363b863816dfb3"/><section>
    <title>DEFAULT</title>
<indexterm><primary>DEFAULT</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>DEFAULT</secondary></indexterm>
<para><computeroutput>tuple world.map_manager.Map.DEFAULT<computeroutput>[static]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=&#32;&#32;([Tiles.GRASS&#32;<emphasis role="keywordflow">if</emphasis>&#32;randint(0,&#32;8)&#32;==&#32;0&#32;<emphasis role="keywordflow">else</emphasis>&#32;Tiles.PLAINS&#32;<emphasis role="keywordflow">for</emphasis>&#32;x&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(2048)]
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;[Tiles.DIRT&#32;<emphasis role="keywordflow">if</emphasis>&#32;randint(0,&#32;10)&#32;==&#32;0&#32;<emphasis role="keywordflow">else</emphasis>&#32;Tiles.PLAINS&#32;<emphasis role="keywordflow">for</emphasis>&#32;x&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(1024)]
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;[Tiles.DIRT&#32;<emphasis role="keywordflow">if</emphasis>&#32;randint(0,&#32;8)&#32;==&#32;0&#32;<emphasis role="keywordflow">else</emphasis>&#32;Tiles.COBBLESTONE&#32;<emphasis role="keywordflow">for</emphasis>&#32;x&#32;<emphasis role="keywordflow">in</emphasis>&#32;range(2048)])
</programlisting></section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1ad65d73642953633f7d900822c9c07787"/><section>
    <title>generate_data_event</title>
<indexterm><primary>generate_data_event</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>generate_data_event</secondary></indexterm>
<para><computeroutput>world.map_manager.Map.generate_data_event</computeroutput></para></section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a1026345a49bbe0b7a681b090261cb82c"/><section>
    <title>load_data_event</title>
<indexterm><primary>load_data_event</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>load_data_event</secondary></indexterm>
<para><computeroutput>world.map_manager.Map.load_data_event</computeroutput></para></section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a53b89b13ce52b571e4198c5a11a65ae0"/><section>
    <title>perlin_noise</title>
<indexterm><primary>perlin_noise</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>perlin_noise</secondary></indexterm>
<para><computeroutput>world.map_manager.Map.perlin_noise</computeroutput></para></section>
<anchor xml:id="_classworld_1_1map__manager_1_1Map_1a2945bc9b24412ad925952b46388ebc72"/><section>
    <title>SEED_RANGE</title>
<indexterm><primary>SEED_RANGE</primary><secondary>world.map_manager.Map</secondary></indexterm>
<indexterm><primary>world.map_manager.Map</primary><secondary>SEED_RANGE</secondary></indexterm>
<para><computeroutput>int world.map_manager.Map.SEED_RANGE = 2 ** 32<computeroutput>[static]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
<link linkend="_map__manager_8py">map_manager.py</link></section>
</section>
