<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classtasks_1_1ServerTasks" xml:lang="en-US">
<title>tasks.ServerTasks Class Reference</title>
<indexterm><primary>tasks.ServerTasks</primary></indexterm>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_classtasks_1_1ServerTasks_1a8e86ed40cbd1f85d21f6adffa13272e2">disconnection</link> (bytes data)</para>
</listitem>
            <listitem><para>bool <link linkend="_classtasks_1_1ServerTasks_1a00318ea07ce8a908bd583ada1cf66578">recognition</link> (conn, addr)</para>
</listitem>
            <listitem><para>None <link linkend="_classtasks_1_1ServerTasks_1a4deb1545cf43f2d1bd810705373a03b1">map_data</link> (conn, addr, WorldHandler world_handler)</para>
</listitem>
            <listitem><para>str <link linkend="_classtasks_1_1ServerTasks_1a823900d288e2d302e5a16058e36a83ce">player_join</link> (conn, PlayerHandler player_handler)</para>
</listitem>
            <listitem><para><link linkend="_classtasks_1_1ServerTasks_1a95f654dba2825c202756c04b9678b187">local_game_state</link> (conn)</para>
</listitem>
            <listitem><para>None <link linkend="_classtasks_1_1ServerTasks_1a00c7c8448aabe93244aced59557d4d08">game_state</link> (conn, bytes data, PlayerHandler player_handler)</para>
</listitem>
            <listitem><para>bool <link linkend="_classtasks_1_1ServerTasks_1a5a8b03e7c3d20c74f5b5b7c6ef366f29">incoming_packets</link> (conn, bytes data, PlayerHandler player_handler)</para>
</listitem>
            <listitem><para>None <link linkend="_classtasks_1_1ServerTasks_1a59b32d7c7f26fc0d7f35b5cda5f3094e">player_hit</link> (conn, bytes data, PlayerHandler player_handler)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para><literallayout><computeroutput>Class for regrouping all server-side requests.
</computeroutput></literallayout> </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classtasks_1_1ServerTasks_1a8e86ed40cbd1f85d21f6adffa13272e2"/><section>
    <title>disconnection()</title>
<indexterm><primary>disconnection</primary><secondary>tasks.ServerTasks</secondary></indexterm>
<indexterm><primary>tasks.ServerTasks</primary><secondary>disconnection</secondary></indexterm>
<para><computeroutput> bool tasks.ServerTasks.disconnection (bytes data)<computeroutput>[static]</computeroutput></computeroutput></para>
<para><literallayout><computeroutput>Task for disconnecting a player.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classtasks_1_1ServerTasks_1a00c7c8448aabe93244aced59557d4d08"/><section>
    <title>game_state()</title>
<indexterm><primary>game_state</primary><secondary>tasks.ServerTasks</secondary></indexterm>
<indexterm><primary>tasks.ServerTasks</primary><secondary>game_state</secondary></indexterm>
<para><computeroutput> None tasks.ServerTasks.game_state ( conn, bytes data, PlayerHandler player_handler)<computeroutput>[static]</computeroutput></computeroutput></para>
<para><literallayout><computeroutput>Task for sending the overall game state to a client.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classtasks_1_1ServerTasks_1a5a8b03e7c3d20c74f5b5b7c6ef366f29"/><section>
    <title>incoming_packets()</title>
<indexterm><primary>incoming_packets</primary><secondary>tasks.ServerTasks</secondary></indexterm>
<indexterm><primary>tasks.ServerTasks</primary><secondary>incoming_packets</secondary></indexterm>
<para><computeroutput> bool tasks.ServerTasks.incoming_packets ( conn, bytes data, PlayerHandler player_handler)<computeroutput>[static]</computeroutput></computeroutput></para>
<para><literallayout><computeroutput>Task for handling incoming packets.
Return True if packet is received and is valid, otherwise False
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classtasks_1_1ServerTasks_1a95f654dba2825c202756c04b9678b187"/><section>
    <title>local_game_state()</title>
<indexterm><primary>local_game_state</primary><secondary>tasks.ServerTasks</secondary></indexterm>
<indexterm><primary>tasks.ServerTasks</primary><secondary>local_game_state</secondary></indexterm>
<para><computeroutput>tasks.ServerTasks.local_game_state ( conn)<computeroutput>[static]</computeroutput></computeroutput></para>
<para><literallayout><computeroutput>Task for requesting a local game state. This is only for specific needs like player data.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classtasks_1_1ServerTasks_1a4deb1545cf43f2d1bd810705373a03b1"/><section>
    <title>map_data()</title>
<indexterm><primary>map_data</primary><secondary>tasks.ServerTasks</secondary></indexterm>
<indexterm><primary>tasks.ServerTasks</primary><secondary>map_data</secondary></indexterm>
<para><computeroutput> None tasks.ServerTasks.map_data ( conn,  addr, WorldHandler world_handler)<computeroutput>[static]</computeroutput></computeroutput></para>
<para><literallayout><computeroutput>Task for sending map data to a client.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classtasks_1_1ServerTasks_1a59b32d7c7f26fc0d7f35b5cda5f3094e"/><section>
    <title>player_hit()</title>
<indexterm><primary>player_hit</primary><secondary>tasks.ServerTasks</secondary></indexterm>
<indexterm><primary>tasks.ServerTasks</primary><secondary>player_hit</secondary></indexterm>
<para><computeroutput> None tasks.ServerTasks.player_hit ( conn, bytes data, PlayerHandler player_handler)<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classtasks_1_1ServerTasks_1a823900d288e2d302e5a16058e36a83ce"/><section>
    <title>player_join()</title>
<indexterm><primary>player_join</primary><secondary>tasks.ServerTasks</secondary></indexterm>
<indexterm><primary>tasks.ServerTasks</primary><secondary>player_join</secondary></indexterm>
<para><computeroutput> str tasks.ServerTasks.player_join ( conn, PlayerHandler player_handler)<computeroutput>[static]</computeroutput></computeroutput></para>
<para><literallayout><computeroutput>Task for joining a client player to the server.
Returns the received player name.
</computeroutput></literallayout> </para>
</section>
<anchor xml:id="_classtasks_1_1ServerTasks_1a00318ea07ce8a908bd583ada1cf66578"/><section>
    <title>recognition()</title>
<indexterm><primary>recognition</primary><secondary>tasks.ServerTasks</secondary></indexterm>
<indexterm><primary>tasks.ServerTasks</primary><secondary>recognition</secondary></indexterm>
<para><computeroutput> bool tasks.ServerTasks.recognition ( conn,  addr)<computeroutput>[static]</computeroutput></computeroutput></para>
<para><literallayout><computeroutput>Task for checking for player authenticity.
</computeroutput></literallayout> </para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
<link linkend="_server_2tasks_8py">server/tasks.py</link></section>
</section>
