<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="client_2tasks_8py" kind="file" language="Python">
    <compoundname>client/tasks.py</compoundname>
    <innerclass refid="classgame_1_1client_1_1tasks_1_1ClientTasks" prot="public">game::client::tasks::ClientTasks</innerclass>
    <innernamespace refid="namespacegame">game</innernamespace>
    <innernamespace refid="namespacegame_1_1client">game::client</innernamespace>
    <innernamespace refid="namespacegame_1_1client_1_1tasks">game::client::tasks</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacegame_1_1client_1_1tasks" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">Module<sp/>name:<sp/>tasks</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">This<sp/>module<sp/>defines<sp/>all<sp/>the<sp/>client-side<sp/>tasks<sp/>when<sp/>attempting<sp/>to<sp/>establish<sp/>a<sp/>connection<sp/>to<sp/>a<sp/>server,<sp/>or<sp/>during<sp/>an</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">established<sp/>connection<sp/>to<sp/>a<sp/>server.</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">These<sp/>tasks<sp/>check<sp/>the<sp/>authenticity<sp/>of<sp/>the<sp/>client<sp/>and<sp/>any<sp/>potential<sp/>errors,<sp/>as<sp/>well<sp/>as<sp/>send<sp/>various<sp/>required<sp/>packets</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">of<sp/>game<sp/>data,<sp/>requests<sp/>and<sp/>responses.<sp/>The<sp/>packets<sp/>are<sp/>built<sp/>using<sp/>the<sp/>different<sp/>packet<sp/>builders.</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">(See<sp/>network/builders<sp/>for<sp/>the<sp/>different<sp/>packet<sp/>builders.)</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral">(See<sp/>network/protocol<sp/>for<sp/>the<sp/>different<sp/>requests<sp/>and<sp/>responses.)</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>math<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ceil</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacegame_1_1client_1_1managers_1_1player__manager" kindref="compound">game.client.managers.player_manager</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>PlayerManager</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacegame_1_1network_1_1builders_1_1base__builder" kindref="compound">game.network.builders.base_builder</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>BaseBuilder</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacegame_1_1network_1_1builders_1_1player__builder" kindref="compound">game.network.builders.player_builder</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>PlayerBuilder</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacegame_1_1network_1_1packet" kindref="compound">game.network.packet</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Hasher,<sp/>fill,<sp/>to_bytes,<sp/>hex_len,<sp/>Packet</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacegame_1_1network_1_1protocol" kindref="compound">game.network.protocol</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Protocol</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacegame_1_1utils_1_1exceptions" kindref="compound">game.utils.exceptions</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>PlayerNameAlreadyExists,<sp/>MaxPlayersReached</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classgame_1_1client_1_1tasks_1_1ClientTasks" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgame_1_1client_1_1tasks_1_1ClientTasks" kindref="compound">ClientTasks</ref>:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Class<sp/>for<sp/>regrouping<sp/>all<sp/>client-side<sp/>requests.</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1a687269af093982a745ab9e074bcb905d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1a687269af093982a745ab9e074bcb905d" kindref="member">recognition</ref>(sock)<sp/>-&gt;<sp/>bool:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Task<sp/>for<sp/>client<sp/>authenticity.</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return<sp/>True<sp/>if<sp/>the<sp/>client&apos;s<sp/>connection<sp/>was<sp/>successful,<sp/>otherwise<sp/>False.</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sock.send(Hasher.enhash(Protocol.RECOGNITION_REQ))</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>sock.recv(Protocol.BUFFER_SIZE)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>data<sp/>==<sp/>Hasher.enhash(Protocol.RECOGNITION_RES)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1af27f2eab4cc394412b1ba424a7ecd72f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1af27f2eab4cc394412b1ba424a7ecd72f" kindref="member">map_data</ref>(sock)<sp/>-&gt;<sp/>None:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Task<sp/>for<sp/>requesting<sp/>the<sp/>map<sp/>data.</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return<sp/>True<sp/>if<sp/>the<sp/>map<sp/>data<sp/>response<sp/>from<sp/>the<sp/>server<sp/>was<sp/>received<sp/>successfully,<sp/>otherwise<sp/>False.</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sock.send(Hasher.enhash(Protocol.MAPDATA_REQ))</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1afdd06e75515022315e02b560101f623d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1afdd06e75515022315e02b560101f623d" kindref="member">confirm_map_data</ref>(data:<sp/>bytes)<sp/>-&gt;<sp/>bool:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Task<sp/>for<sp/>confirming<sp/>the<sp/>reception<sp/>of<sp/>the<sp/>map<sp/>data<sp/>request.</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>True<sp/>if<sp/>the<sp/>data<sp/>is<sp/>a<sp/>valid<sp/>server<sp/>response,<sp/>otherwise<sp/>False.</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>data<sp/>==<sp/>Hasher.enhash(Protocol.MAPDATA_RES)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1a4f0f8bb6825971f3e6f2f655aab89638" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1a4f0f8bb6825971f3e6f2f655aab89638" kindref="member">get_map_data</ref>(sock)<sp/>-&gt;<sp/>bytes:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Task<sp/>for<sp/>receiving<sp/>the<sp/>map<sp/>data<sp/>object<sp/>and<sp/>decompressing<sp/>it.</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return<sp/>the<sp/>decompressed<sp/>map<sp/>data<sp/>object<sp/>once<sp/>received.</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compressed_map_obj<sp/>=<sp/>b</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>sock.recv(Protocol.BUFFER_SIZE)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>data<sp/>!=<sp/>Hasher.enhash(Protocol.MAPDATA_EOS):</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compressed_map_obj<sp/>+=<sp/>data</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>sock.recv(Protocol.BUFFER_SIZE)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compressed_map_obj.strip()</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1afca576e562ad4e6cb4c168c193cff851" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1afca576e562ad4e6cb4c168c193cff851" kindref="member">player_join</ref>(sock)<sp/>-&gt;<sp/>bool:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Task<sp/>for<sp/>joining<sp/>a<sp/>player<sp/>to<sp/>the<sp/>server.</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return<sp/>True<sp/>if<sp/>the<sp/>response<sp/>from<sp/>the<sp/>server<sp/>is<sp/>received,<sp/>otherwise<sp/>False.</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sock.send(Hasher.enhash(Protocol.PLAYERJOIN_REQ))</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>sock.recv(Protocol.BUFFER_SIZE)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>data<sp/>==<sp/>Hasher.enhash(Protocol.PLAYERJOIN_RES)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1a0f262a813e52fa80e2fb0d9ad5792d4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1a0f262a813e52fa80e2fb0d9ad5792d4c" kindref="member">send_player_name</ref>(sock,<sp/>player_name)<sp/>-&gt;<sp/>bool:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Task<sp/>for<sp/>sending<sp/>the<sp/>client&apos;s<sp/>name<sp/>to<sp/>the<sp/>server.</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raise<sp/>exception<sp/>when<sp/>player<sp/>name<sp/>is<sp/>already<sp/>taken.</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sock.send(player_name.encode(Protocol.ENCODING))</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>sock.recv(Protocol.BUFFER_SIZE)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>data<sp/>==<sp/>Hasher.enhash(Protocol.NAMEALREXIST_ERR):</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>PlayerNameAlreadyExists</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>data<sp/>==<sp/>Hasher.enhash(Protocol.MAXPLAYERS_ERR):</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>MaxPlayersReached</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>data<sp/>==<sp/>Hasher.enhash(Protocol.PLAYEROBJ_RES)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1a37ddbb2f8560b31c791b8f2081263c8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1a37ddbb2f8560b31c791b8f2081263c8f" kindref="member">send_local_player</ref>(sock,<sp/>data:<sp/>bytes,<sp/>player_manager:<sp/>PlayerManager)<sp/>-&gt;<sp/>bool:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Task<sp/>for<sp/>sending<sp/>the<sp/>local<sp/>player<sp/>to<sp/>the<sp/>server.</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return<sp/>True<sp/>if<sp/>the<sp/>local<sp/>player<sp/>packet<sp/>was<sp/>sent<sp/>to<sp/>and<sp/>received<sp/>by<sp/>the<sp/>server,<sp/>otherwise<sp/>False.</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>data<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>data<sp/>!=<sp/>Hasher.enhash(Protocol.LCGAME_REQ):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packet<sp/>=<sp/>PlayerBuilder.get_compressed_player_packet(</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseBuilder.PLAYER_POSITION_UPDATE_COMMAND,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player_manager.local_player</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sock.send(fill(to_bytes(Protocol.SPACKET_MAGIC)<sp/>+<sp/>hex_len(packet)<sp/>+<sp/>packet))</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1a09a154893f11f83d18e6d01d7d7eb81d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1a09a154893f11f83d18e6d01d7d7eb81d" kindref="member">confirm_local_player</ref>(data:<sp/>bytes)<sp/>-&gt;<sp/>bool:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Task<sp/>for<sp/>confirming<sp/>the<sp/>reception<sp/>of<sp/>the<sp/>local<sp/>player<sp/>sent<sp/>to<sp/>the<sp/>server.</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return<sp/>True<sp/>if<sp/>the<sp/>data<sp/>is<sp/>a<sp/>valid<sp/>packet<sp/>reception<sp/>response,<sp/>otherwise<sp/>False.</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>data<sp/>==<sp/>Hasher.enhash(Protocol.PACKETRECV_RES)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1acf5af473a7bfd76b7558be7d0c278fe2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1acf5af473a7bfd76b7558be7d0c278fe2" kindref="member">get_global_game_state</ref>(sock,<sp/>data:<sp/>bytes)<sp/>-&gt;<sp/>bytes<sp/>|<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Task<sp/>for<sp/>receiving<sp/>the<sp/>global<sp/>server-side<sp/>game<sp/>state.</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return<sp/>the<sp/>game<sp/>state<sp/>list<sp/>object<sp/>if<sp/>received<sp/>successfully,<sp/>otherwise<sp/>None.</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>data<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>data<sp/>!=<sp/>Hasher.enhash(Protocol.GLGAME_RES):</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compressed_game_state<sp/>=<sp/>b</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>sock.recv(Protocol.BUFFER_SIZE)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>int.from_bytes(data[:Packet.DATA_SIZE])</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_packets<sp/>=<sp/>ceil(length<sp/>/<sp/>Protocol.BUFFER_SIZE)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>data[Packet.DATA_SIZE:Packet.DATA_SIZE<sp/>+<sp/>length]</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>n_packets<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n_packets):</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i<sp/>!=<sp/>0:<sp/>data<sp/>=<sp/>sock.recv(Protocol.BUFFER_SIZE)[:length<sp/>-<sp/>i<sp/>*<sp/>Protocol.BUFFER_SIZE]</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compressed_game_state<sp/>+=<sp/>data</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compressed_game_state</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1aacc588f31abadc1e1506800875d3cebc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1aacc588f31abadc1e1506800875d3cebc" kindref="member">check_packet_queue</ref>(sock,<sp/>queue:<sp/>list[bytes])<sp/>-&gt;<sp/>bool:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Task<sp/>for<sp/>verifying<sp/>the<sp/>packet<sp/>queue.</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>a<sp/>packet<sp/>is<sp/>present,<sp/>take<sp/>the<sp/>first<sp/>one,<sp/>send<sp/>it<sp/>to<sp/>the<sp/>server<sp/>and<sp/>remove<sp/>it<sp/>from<sp/>the<sp/>queue.</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[FIFO]</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>queue:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sock.send(fill(to_bytes(Protocol.SPACKET_MAGIC)<sp/>+<sp/>hex_len(queue[0])<sp/>+<sp/>queue[0]))</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue.pop(0)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1a057e2f650cbf0078bd7a083ec7d0a4ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classgame_1_1client_1_1tasks_1_1ClientTasks_1a057e2f650cbf0078bd7a083ec7d0a4ba" kindref="member">confirm_queued_packet</ref>(data)<sp/>-&gt;<sp/>bool:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Task<sp/>for<sp/>confirming<sp/>the<sp/>reception<sp/>of<sp/>the<sp/>queued<sp/>packet<sp/>that<sp/>was<sp/>sent<sp/>to<sp/>the<sp/>server.</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return<sp/>True<sp/>if<sp/>the<sp/>data<sp/>is<sp/>a<sp/>valid<sp/>packet<sp/>reception<sp/>response,<sp/>otherwise<sp/>False.</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>data<sp/>==<sp/>Hasher.enhash(Protocol.PACKETRECV_RES)</highlight></codeline>
    </programlisting>
    <location file="/home/samuel/Documents/Python/Tile-Game/game/client/tasks.py"/>
  </compounddef>
</doxygen>
