<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classgame_1_1server_1_1tasks_1_1ServerTasks" kind="class" language="Python" prot="public">
    <compoundname>game::server::tasks::ServerTasks</compoundname>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgame_1_1server_1_1tasks_1_1ServerTasks_1a35859adae74c4be55c5f41782ff5afbe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition> bool game.server.tasks.ServerTasks.disconnection</definition>
        <argsstring>(bytes data)</argsstring>
        <name>disconnection</name>
        <qualifiedname>game.server.tasks.ServerTasks.disconnection</qualifiedname>
        <param>
          <type>bytes</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Task for disconnecting a player.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="game/server/tasks.py" line="30" column="1" bodyfile="game/server/tasks.py" bodystart="30" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classgame_1_1server_1_1tasks_1_1ServerTasks_1a66bb2ef81e9310189d714782a5c4edc2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition> bool game.server.tasks.ServerTasks.recognition</definition>
        <argsstring>(conn, addr)</argsstring>
        <name>recognition</name>
        <qualifiedname>game.server.tasks.ServerTasks.recognition</qualifiedname>
        <param>
          <type>conn</type>
          <defname>conn</defname>
        </param>
        <param>
          <type>addr</type>
          <defname>addr</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Task for checking for player authenticity.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="game/server/tasks.py" line="37" column="1" bodyfile="game/server/tasks.py" bodystart="37" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classgame_1_1server_1_1tasks_1_1ServerTasks_1a7792ac1c63453dd0ff749ce56427da60" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>None</type>
        <definition> None game.server.tasks.ServerTasks.map_data</definition>
        <argsstring>(conn, addr, WorldHandler world_handler)</argsstring>
        <name>map_data</name>
        <qualifiedname>game.server.tasks.ServerTasks.map_data</qualifiedname>
        <param>
          <type>conn</type>
          <defname>conn</defname>
        </param>
        <param>
          <type>addr</type>
          <defname>addr</defname>
        </param>
        <param>
          <type><ref refid="classgame_1_1server_1_1handlers_1_1world__handler_1_1WorldHandler" kindref="compound">WorldHandler</ref></type>
          <declname>world_handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Task for sending map data to a client.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="game/server/tasks.py" line="49" column="1" bodyfile="game/server/tasks.py" bodystart="49" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classgame_1_1server_1_1tasks_1_1ServerTasks_1aefe4ca0583f7a791d681277a66d7df08" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>str</type>
        <definition> str game.server.tasks.ServerTasks.player_join</definition>
        <argsstring>(conn, PlayerHandler player_handler)</argsstring>
        <name>player_join</name>
        <qualifiedname>game.server.tasks.ServerTasks.player_join</qualifiedname>
        <param>
          <type>conn</type>
          <defname>conn</defname>
        </param>
        <param>
          <type><ref refid="classgame_1_1server_1_1handlers_1_1player__handler_1_1PlayerHandler" kindref="compound">PlayerHandler</ref></type>
          <declname>player_handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Task for joining a client player to the server.
Returns the received player name.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="game/server/tasks.py" line="63" column="1" bodyfile="game/server/tasks.py" bodystart="63" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classgame_1_1server_1_1tasks_1_1ServerTasks_1a6b3cba63bddb1dec319fbcefbf3fdf30" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>game.server.tasks.ServerTasks.local_game_state</definition>
        <argsstring>(conn)</argsstring>
        <name>local_game_state</name>
        <qualifiedname>game.server.tasks.ServerTasks.local_game_state</qualifiedname>
        <param>
          <type>conn</type>
          <defname>conn</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Task for requesting a local game state. This is only for specific needs like player data.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="game/server/tasks.py" line="88" column="1" bodyfile="game/server/tasks.py" bodystart="88" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classgame_1_1server_1_1tasks_1_1ServerTasks_1a4fa5d87b6784346d23866b7f01833fef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition> bool game.server.tasks.ServerTasks.game_state</definition>
        <argsstring>(conn, bytes data, PlayerHandler player_handler, WorldHandler world_handler)</argsstring>
        <name>game_state</name>
        <qualifiedname>game.server.tasks.ServerTasks.game_state</qualifiedname>
        <param>
          <type>conn</type>
          <defname>conn</defname>
        </param>
        <param>
          <type>bytes</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="classgame_1_1server_1_1handlers_1_1player__handler_1_1PlayerHandler" kindref="compound">PlayerHandler</ref></type>
          <declname>player_handler</declname>
        </param>
        <param>
          <type><ref refid="classgame_1_1server_1_1handlers_1_1world__handler_1_1WorldHandler" kindref="compound">WorldHandler</ref></type>
          <declname>world_handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Task for sending the overall game state to a client.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="game/server/tasks.py" line="95" column="1" bodyfile="game/server/tasks.py" bodystart="95" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classgame_1_1server_1_1tasks_1_1ServerTasks_1a4d4ad352431f484c7908c93d0481af07" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition> bool game.server.tasks.ServerTasks.incoming_packets</definition>
        <argsstring>(conn, bytes data, PlayerHandler player_handler, WorldHandler world_handler)</argsstring>
        <name>incoming_packets</name>
        <qualifiedname>game.server.tasks.ServerTasks.incoming_packets</qualifiedname>
        <param>
          <type>conn</type>
          <defname>conn</defname>
        </param>
        <param>
          <type>bytes</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="classgame_1_1server_1_1handlers_1_1player__handler_1_1PlayerHandler" kindref="compound">PlayerHandler</ref></type>
          <declname>player_handler</declname>
        </param>
        <param>
          <type><ref refid="classgame_1_1server_1_1handlers_1_1world__handler_1_1WorldHandler" kindref="compound">WorldHandler</ref></type>
          <declname>world_handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Task for handling incoming packets.
Return True if packet is received and is valid, otherwise False
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="game/server/tasks.py" line="111" column="1" bodyfile="game/server/tasks.py" bodystart="111" bodyend="136"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Class for regrouping all server-side requests.
</verbatim> </para>
    </detaileddescription>
    <location file="game/server/tasks.py" line="24" column="1" bodyfile="game/server/tasks.py" bodystart="24" bodyend="136"/>
    <listofallmembers>
      <member refid="classgame_1_1server_1_1tasks_1_1ServerTasks_1a35859adae74c4be55c5f41782ff5afbe" prot="public" virt="non-virtual"><scope>game::server::tasks::ServerTasks</scope><name>disconnection</name></member>
      <member refid="classgame_1_1server_1_1tasks_1_1ServerTasks_1a4fa5d87b6784346d23866b7f01833fef" prot="public" virt="non-virtual"><scope>game::server::tasks::ServerTasks</scope><name>game_state</name></member>
      <member refid="classgame_1_1server_1_1tasks_1_1ServerTasks_1a4d4ad352431f484c7908c93d0481af07" prot="public" virt="non-virtual"><scope>game::server::tasks::ServerTasks</scope><name>incoming_packets</name></member>
      <member refid="classgame_1_1server_1_1tasks_1_1ServerTasks_1a6b3cba63bddb1dec319fbcefbf3fdf30" prot="public" virt="non-virtual"><scope>game::server::tasks::ServerTasks</scope><name>local_game_state</name></member>
      <member refid="classgame_1_1server_1_1tasks_1_1ServerTasks_1a7792ac1c63453dd0ff749ce56427da60" prot="public" virt="non-virtual"><scope>game::server::tasks::ServerTasks</scope><name>map_data</name></member>
      <member refid="classgame_1_1server_1_1tasks_1_1ServerTasks_1aefe4ca0583f7a791d681277a66d7df08" prot="public" virt="non-virtual"><scope>game::server::tasks::ServerTasks</scope><name>player_join</name></member>
      <member refid="classgame_1_1server_1_1tasks_1_1ServerTasks_1a66bb2ef81e9310189d714782a5c4edc2" prot="public" virt="non-virtual"><scope>game::server::tasks::ServerTasks</scope><name>recognition</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
